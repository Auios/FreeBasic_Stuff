<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:"Tms Rmn";
	panose-1:2 2 6 3 4 5 5 2 3 4;}
@font-face
	{font-family:Helv;
	panose-1:2 11 6 4 2 2 2 3 2 4;}
@font-face
	{font-family:"New York";
	panose-1:2 4 5 3 6 5 6 2 3 4;}
@font-face
	{font-family:System;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:Batang;
	panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 1 6 1 0 1 1 1 1 1;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
	{font-family:Dotum;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:SimHei;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:MingLiU;
	panose-1:2 1 6 9 0 1 1 1 1 1;}
@font-face
	{font-family:Mincho;
	panose-1:2 2 6 9 4 3 5 8 3 5;}
@font-face
	{font-family:Gulim;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:"Angsana New";
	panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
	{font-family:"Cordia New";
	panose-1:2 11 3 4 2 2 2 2 2 4;}
@font-face
	{font-family:Mangal;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Latha;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sylfaen;
	panose-1:1 10 5 2 5 3 6 3 3 3;}
@font-face
	{font-family:Vrinda;
	panose-1:1 1 6 0 1 1 1 1 1 1;}
@font-face
	{font-family:Raavi;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Shruti;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sendnya;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Gautami;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Tunga;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Estrangella Edessa";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";}
h1
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman";}
h2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h3
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Times New Roman";}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0cm;
	margin-bottom:.0001pt;
	background:navy;
	font-size:10.0pt;
	font-family:Tahoma;}
span.msoins0
	{text-decoration:underline;}
span.msodel0
	{color:red;
	text-decoration:line-through;}
ins
	{text-decoration:none;}
span.msoIns
	{text-decoration:underline;}
span.msoDel
	{text-decoration:line-through;
	color:red;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:2.0cm 2.0cm 2.0cm 70.9pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=EN-US>

<div class=Section1>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="_Toc293665934"></a><a name="_Toc297808027"></a><a
name="_Toc297205915"></a>CONTENTS</h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665540"></a><a name="_Toc297808028"></a><a
name="_Toc297205916"></a><a name="_Toc293665935"></a><span lang=RO>History</span></h1>

<p class=MsoNormal style='text-align:justify'><b><span lang=RO>Clady3D</span></b><span
lang=RO> is a <b>free</b>, easy to use 3D game engine, an <b>Irrlicht</b>
wrapper for <b>FreeBasic</b> language .</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=RO>Will result a
compiled executable file for <b>win32</b>. It is not an interpreted code, so it
will be very fast.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=RO>It continues the
way started with <b>Ninfa3D 1.0x </b>serie, an open source project created by <b>David</b>,
&nbsp;but stopped at <b>1.0g</b> &nbsp;version (in 2010). <b>Clady3D</b> comes
with many changes, bug fixes and a new syntax &nbsp;in an other logical way
structured.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=RO>Its target is to
the beginners in the 3D game programming &nbsp;using an easy language as the
BASIC language is.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665541"></a><a name="_Toc297808029"></a><a
name="_Toc297205917"></a><a name="_Toc293665936"></a><span lang=RO>Installation</span></h1>

<p class=MsoNormal><span lang=RO>1.First of all, download and install the <b>FreeBasic</b>
compiler <b>0.21.1</b> (or the newest version) &nbsp;&nbsp;for <b>win32</b>;</span></p>

<p class=MsoNormal><span lang=RO>2.Then, download and install an editor for
FreeBasic, as <b>FBide</b> or <b>FBedit</b>; I am working with <b>FBide 0.4.6;</b></span></p>

<p class=MsoNormal><span lang=RO>3.Download the <b>FB manual 0.21.1</b> too;</span></p>

<p class=MsoNormal><span lang=RO>4.Set in the FBide editor the paths to <b>fbc.exe</b>
(the freebasic compiler) and to the <b>FB-manual-0.21.1.chm</b>;</span></p>

<p class=MsoNormal><span lang=RO>5.Copy the <b>Clady3D_examples</b> folder in
the root directory of the FreeBasic installation;</span></p>

<p class=MsoNormal><span lang=RO>6.Copy the <b>Clady3D.bi</b> (library) and <b>force.bi</b>
to te <b>inc</b> folder of the FreeBasic installation;</span></p>

<p class=MsoNormal><span lang=RO>7.Copy all the <b>dlls</b> to the working
directory (in the <b>Clady3D_examples</b> folder);</span></p>

<p class=MsoNormal><span lang=RO>8.Run <b>OpenAL-Install-.exe</b> to install
OpenAL library if You haven’t;</span></p>

<p class=MsoNormal><span lang=RO>9.Download and install the runtime for
vc++2008 (<b>vcredist_x86.exe</b>);</span></p>

<p class=MsoNormal><span lang=RO>10.Ready to start Your work!</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665542"></a><a name="_Toc297808030"></a><a
name="_Toc297205918"></a><a name="_Toc293665937"></a><span lang=RO>The engine</span></h1>

<p class=MsoNormal><span lang=RO>As a programmer, have in mind, you are working
with 2 kind of objects:</span></p>

<p class=MsoNormal><span lang=RO>- the <b>resources</b>;</span></p>

<p class=MsoNormal><span lang=RO>- the <b>entities</b> (<b>nodes)</b>;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><b>RESOURCES</b></p>

<p class=MsoNormal>The resources are: </p>

<p class=MsoNormal>- the resources stored in your working folders, as bmp,
jpg....files, wav, ogg files......</p>

<p class=MsoNormal>- the resources loaded in memory : images in RAMmemory,
textures in videomemory, font_files, zip_files...</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>ENTITIES</b></p>

<p class=MsoNormal>The entities are the visible &nbsp;and/or controlable nodes
in the scene: meshes (in Irrlicht, IAnimatedSceneNode), 3D levels as BSP or
other 3D format, sky, billboard, terrain, clouds, lensflare, grass, beam,
bolt....</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The entities(or nodes) have properties and metodes.</p>

<p class=MsoNormal>Some metodes are global for alls the entities, some metodes
are only for individual entities.</p>

<p class=MsoNormal>The first thing is to load some resources, then create the
entity and then set some properties of the entity. In the main loop of the
program, the render will be done automaticaly, don’t care about that.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The physic bodies are some special entities (nodes),
invisible, but associated with visible meshes wich follow the physics laws.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The physic joints are some special links between 2 bodies;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The physic vehicle can be built from a mesh for chassis and
4 meshes as tires. It can be steered even with a joystick and can have force
feedback. &nbsp;&nbsp;</p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297205919"></a><a name="_Toc297808031"></a><span lang=RO>Features</span></h1>

<p class=MsoNormal><b><span lang=RO>&nbsp;</span></b></p>

<p class=MsoNormal><span lang=RO>-support for OpenGL and DirectX9.0c drivers,
too;</span></p>

<p class=MsoNormal><span lang=RO>-support for bmp, jpg, tga, png files;</span></p>

<p class=MsoNormal><span lang=RO>-support for 3ds, ms3d, x, md2, bsp, csm map
and others 3D mesh formats ;</span></p>

<p class=MsoNormal><span lang=RO>-support for terrain from a heightmap;</span></p>

<p class=MsoNormal><span lang=RO>-support for GLSL and HLSL shaders;</span></p>

<p class=MsoNormal><span lang=RO>-support for terrain texture splatting;</span></p>

<p class=MsoNormal><span lang=RO>-support for collisions between entities based
on triangle selectors and response animators;</span></p>

<p class=MsoNormal><span lang=RO>-support for collisions between a normal mesh
and a physic body;</span></p>

<p class=MsoNormal><span lang=RO>-support for ray collisions;</span></p>

<p class=MsoNormal><span lang=RO>-support for physics as bodies, joints and
vehicles;</span></p>

<p class=MsoNormal><span lang=RO>-support for joystick and force feedback;</span></p>

<p class=MsoNormal><span lang=RO>-support for 2D and 3D sound and music (wav
and ogg);</span></p>

<p class=MsoNormal><span lang=RO>-can be added multiplayer support, using the
FreeBasic libraries;</span></p>

<p class=MsoNormal><span lang=RO>- a decent GUI;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><b><span lang=RO>&nbsp;</span></b></p>

<h1><a name="_Toc297205920"></a><a name="_Toc293665938"></a><a
name="_Toc293665543"></a><a name="_Toc297808032"></a><span lang=RO>Thanks</span></h1>

<p class=MsoNormal style='text-align:justify'><span lang=RO>Many thanks to <b>David</b>,
the creator of the wonderfull <b>Ninfa3D</b> game engine, the starting point of
this work.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=RO>Many thanks, too,
to the <b>Irrlicht3D</b> engine team, to the <b>NewtonGamesDynamics</b> team,
to the <b>OpenAL</b> library team, to the <b>OggVorbis</b> library team, to the
<b>FreeBasic</b> compiler team, to the <b>FBide editor</b> for FreeBasic team
and , not at the last, to the <b>Frank Dodd</b>, the creator of the <b>IrrlichtWrapper</b>
for FreeBasic wich inspired me some things.</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297205921"></a><a name="_Toc297808033"></a><span lang=RO>Licensing
agreement</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><span
lang=RO>This software is provided &quot;as-is&quot;, without any express or
implied warranty. It is free.</span></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><span
lang=RO>In no event shall the author be held liable for any damages arising
from the use of this software.</span></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><span
lang=RO>This is a contract. By accepting the Clady3D game engine (the
SOFTWARE), you (either an individual or a single entity, the LICENSEE) accept
the terms and conditions of this licensing agreement.</span></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><span
lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><span
lang=RO>If the LICENSEE does not accept the terms and conditions, then LICENSEE
must not accept the SOFTWARE.</span></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><span
lang=RO>If at a later time the LICENSEE decides to not continue licensing the
SOFTWARE under these terms and conditions, then the LICENSEE must delete
permanently all files constituting the SOFTWARE.</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297205922"></a><a name="_Toc297808034"></a><span lang=RO>Commands</span></h1>

<h2><span lang=RO>&nbsp;</span></h2>

<h1><a name="_Toc297205923"></a><a name="_Toc297808035"></a><span lang=RO>1.Beam</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665544"></a><a name="_Toc297808036"></a><a
name="_Toc297205924"></a><a name="_Toc293665939"></a><span lang=RO>nAddBeam</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAddBeam()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add a beam node to the scene, returns a
pointer as nBeam</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665545"></a><a name="_Toc297808037"></a><a
name="_Toc297205925"></a><a name="_Toc293665940"></a><span lang=RO>nSetBeamPosition</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBeamPosition(beam, startx, starty, startz,
endx, endy, endz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>beam as nBeam,</span></p>

<p class=MsoNormal><span lang=RO>startx, starty, startz as Single, start point</span></p>

<p class=MsoNormal><span lang=RO>endx, endy, endz as Single, end point</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the beam position</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665546"></a><a name="_Toc297808038"></a><a
name="_Toc297205926"></a><a name="_Toc293665941"></a><span lang=RO>nSetBeamSize</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBeamSize(beam, size)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>beam as nBeam,</span></p>

<p class=MsoNormal><span lang=RO>size as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the beam size</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h1><a name="_Toc293665547"></a><a name="_Toc297808039"></a><a
name="_Toc297205927"></a><a name="_Toc293665942"></a><span lang=RO>2.Billboard</span></h1>

<h2><a name="_Toc293665548"></a><a name="_Toc297808040"></a><a
name="_Toc297205928"></a><a name="_Toc293665943"></a><span lang=RO>nLoadBillboard</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadBillboard(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a billboard node from a file, returns a
pointer as nBillboard</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665549"></a><a name="_Toc297808041"></a><a
name="_Toc297205929"></a><a name="_Toc293665944"></a><span lang=RO>nSetBillboardScale</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBillboardScale(billbd, sx, sy)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>billbd as nBillboard, sx,sy as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>scale the billboard</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665550"></a><a name="_Toc297808042"></a><a
name="_Toc297205930"></a><a name="_Toc293665945"></a><span lang=RO>nSetBillboardColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBillboardColor(billbd, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>billbd as nBillboard, R,G,B as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the color of the billboard</span></p>

<h1><a name="_Toc293665551"></a><a name="_Toc293665946"></a><span lang=RO>&nbsp;</span></h1>

<h1><a name="_Toc297205931"></a><a name="_Toc297808043"></a><span lang=RO>3.Bolt</span></h1>

<h2><a name="_Toc293665552"></a><a name="_Toc297808044"></a><a
name="_Toc297205932"></a><a name="_Toc293665947"></a><span lang=RO>nAddBoltSceneNode</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAddBoltSceneNode()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add a bolt to scene as nBolt</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665553"></a><a name="_Toc297808045"></a><a
name="_Toc297205933"></a><a name="_Toc293665948"></a><span lang=RO>nSetBoltProperties</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBoltProperties(bolt, sx,sy, sz, ex, ey,
ez)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>bolt as nBolt,</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz as Single, start point,</span></p>

<p class=MsoNormal><span lang=RO>ex,ey,ez as Single, end point,</span></p>

<p class=MsoNormal><span lang=RO>updateTime as uinteger&nbsp; (ex. 50)</span></p>

<p class=MsoNormal><span lang=RO>height as uinteger&nbsp; (ex. 10)</span></p>

<p class=MsoNormal><span lang=RO>thickness as single (ex. 5.0)</span></p>

<p class=MsoNormal><span lang=RO>parts as uinteger (ex. 10)</span></p>

<p class=MsoNormal><span lang=RO>nr_bolts as uinteger&nbsp; (ex. 6)</span></p>

<p class=MsoNormal><span lang=RO>steadyend as uinteger &nbsp;(ex. 1)</span></p>

<p class=MsoNormal><span lang=RO>a as uinteger&nbsp; (0 to 255)</span></p>

<p class=MsoNormal><span lang=RO>r as uinteger&nbsp; (0 to 255)</span></p>

<p class=MsoNormal><span lang=RO>g as uinteger&nbsp; (0 to 255)</span></p>

<p class=MsoNormal><span lang=RO>b as uinteger &nbsp;(0 to 255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the properties of the bolt node,(
steadyend=0/off, steadyend=1/on)</span></p>

<h1><span lang=RO>&nbsp;</span></h1>

<h1><a name="_Toc293665554"></a><a name="_Toc297808046"></a><a
name="_Toc297205934"></a><a name="_Toc293665949"></a><span lang=RO>4.BSP</span></h1>

<h2><a name="_Toc293665555"></a><a name="_Toc297808047"></a><a
name="_Toc297205935"></a><a name="_Toc293665950"></a><span lang=RO>nLoadMeshBSPinRAM</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadMeshBSPinRAM(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a BSP mesh in RAM memory (it is not
visible), return a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665556"></a><a name="_Toc297808048"></a><a
name="_Toc297205936"></a><a name="_Toc293665951"></a><span lang=RO>nCreateNodeBSPfromMeshBSP</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateNodeBSPfromMeshBSP(meshBSP)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshBSP as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a scene node BSP, return a pointer as
UInteger Ptr (it is visible)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665557"></a><a name="_Toc297808049"></a><a
name="_Toc297205937"></a><a name="_Toc293665952"></a><span lang=RO>nCreateNodeBSPfromFile</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateNodeBSPfromFile(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a scene node BSP, return a pointer as
UInteger Ptr (it is visible)</span></p>

<h2><span lang=RO>&nbsp;</span></h2>

<h1><a name="_Toc293665558"></a><a name="_Toc297808050"></a><a
name="_Toc297205938"></a><a name="_Toc293665953"></a><span lang=RO>5.Camera</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665559"></a><a name="_Toc297808051"></a><a
name="_Toc297205939"></a><a name="_Toc293665954"></a><span lang=RO>nCreateCamera</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateCamera()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a camera, returns a pointer as nCamera</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665560"></a><a name="_Toc297808052"></a><a
name="_Toc297205940"></a><a name="_Toc293665955"></a><span lang=RO>nCreateCameraFPS</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateCameraFPS(rots, movs)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>rots, movs as Single (rotation speed, move
speed)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a cameraFPS style, returns a pointer as
nCamera (WASD and mouse rotation) </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665561"></a><a name="_Toc297808053"></a><a
name="_Toc297205941"></a><a name="_Toc293665956"></a><span lang=RO>nCreateCameraMaya</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateCameraMaya(rots, zooms, movs)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>rots, zooms, movs as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a camera Maya style, returns a pointer
as nCamera</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665562"></a><a name="_Toc297808054"></a><a
name="_Toc297205942"></a><a name="_Toc293665957"></a><span lang=RO>nCreateCameraIsometric</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateCameraIsometric(width, height, near,
far)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>width, height, near, far as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a cameraIsometrtic style, returns a
pointer as nCamera</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665563"></a><a name="_Toc297808055"></a><a
name="_Toc297205943"></a><a name="_Toc293665958"></a><span lang=RO>nEnableControlCamera</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nEnableControlCamera(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>enable control camera</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665564"></a><a name="_Toc297808056"></a><a
name="_Toc297205944"></a><a name="_Toc293665959"></a><span lang=RO>nDisableControlCamera</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDisableControlCamera(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>disable control camera</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665565"></a><a name="_Toc297808057"></a><a
name="_Toc297205945"></a><a name="_Toc293665960"></a><span lang=RO>nSetCameraFOV</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCameraFOV(camera, ratio)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera, ratio as Single</span></p>

<p class=MsoNormal><span lang=RO>sescription:</span></p>

<p class=MsoNormal><span lang=RO>set the filed of view of the camera</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665566"></a><a name="_Toc297808058"></a><a
name="_Toc297205946"></a><a name="_Toc293665961"></a><span lang=RO>nSetCameraRange</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCameraRange(camera, near, far)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera, near, far as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the camera range</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665567"></a><a name="_Toc297808059"></a><a
name="_Toc297205947"></a><a name="_Toc293665962"></a><span lang=RO>nSetCameraTarget</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCameraTarget(camera, tx, ty, tz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera, tx,ty,tz as Single (target
position)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the camera target</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665568"></a><a name="_Toc297808060"></a><a
name="_Toc297205948"></a><a name="_Toc293665963"></a><span lang=RO>nSetActiveCamera</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetActiveCamera(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set a camera to be active</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665569"></a><a name="_Toc297808061"></a><a
name="_Toc297205949"></a><a name="_Toc293665964"></a><span lang=RO>nSetCameraViewPort</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCameraViewPort(x1,y1,x2,y2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,x2,y2 as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the viewport for the active camera</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665570"></a><a name="_Toc297808062"></a><a
name="_Toc297205950"></a><a name="_Toc293665965"></a><span lang=RO>nSetCameraAspectRatio</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCameraAspectRatio(camera, aspect_ratio)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera, aspect_ratio as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the aspect ratio of the camera</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665571"></a><a name="_Toc297808063"></a><a
name="_Toc297205951"></a><a name="_Toc293665966"></a><span lang=RO>nGetCameraTargetX</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCameraTargetX(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the Xtarget of the camera</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665572"></a><a name="_Toc297808064"></a><a
name="_Toc297205952"></a><a name="_Toc293665967"></a><span lang=RO>nGetCameraTargetY</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCameraTargetY(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the Ytarget of the camera</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665573"></a><a name="_Toc297808065"></a><a
name="_Toc297205953"></a><a name="_Toc293665968"></a><span lang=RO>nGetCameraTargetZ</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCameraTargetZ(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the Ztarget of the camera</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665574"></a><a name="_Toc297808066"></a><a
name="_Toc297205954"></a><a name="_Toc293665969"></a><span lang=RO>nGetCameraTargetPos</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCameraTargetPos(camera, tx,ty,tz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera, tx,ty,tz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns in tX, tY, tZ the 3D coordinates of
the camera target</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665575"></a><a name="_Toc297808067"></a><a
name="_Toc297205955"></a><a name="_Toc293665970"></a><span lang=RO>nGetCameraDir</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCameraDir(camera, dx,dy,dz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera, dx,dy,dz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns in dx,dy,dz the direction of the
camera&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665576"></a><a name="_Toc297808068"></a><a
name="_Toc297205956"></a><a name="_Toc293665971"></a><span lang=RO>nGetViewPortWidth</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetViewPortWidth()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the viewport width as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665577"></a><a name="_Toc297808069"></a><a
name="_Toc297205957"></a><a name="_Toc293665972"></a><span lang=RO>nGetViewPortHeight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetViewPortHeight()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the viewport height as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665578"></a><a name="_Toc297808070"></a><a
name="_Toc297205958"></a><a name="_Toc293665973"></a><span lang=RO>6.Clouds</span></h1>

<h2><a name="_Toc293665579"></a><a name="_Toc297808071"></a><a
name="_Toc297205959"></a><a name="_Toc293665974"></a><span lang=RO>nCreateClouds</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateClouds(texture, LOD, depth, density)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture,</span></p>

<p class=MsoNormal><span lang=RO>LOD as UInteger, level of detail,</span></p>

<p class=MsoNormal><span lang=RO>depth as UInteger,</span></p>

<p class=MsoNormal><span lang=RO>density as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create clouds, returns a pointer as nClouds</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665580"></a><a name="_Toc297808072"></a><a
name="_Toc297205960"></a><a name="_Toc293665975"></a><span lang=RO>7.Collisions</span></h1>

<h2><a name="_Toc293665581"></a><a name="_Toc297808073"></a><a
name="_Toc297205961"></a><a name="_Toc293665976"></a><span lang=RO>nDrawLine3D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawLine3D(x1,y1,z1,x2,y2,z2,thickness,alpha,
R,G,B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2,thickness as Single</span></p>

<p class=MsoNormal><span lang=RO>alpha as UInteger, R,G,B as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws a 3D line in the 3D world</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665582"></a><a name="_Toc297808074"></a><a
name="_Toc297205962"></a><a name="_Toc293665977"></a><span lang=RO>nSetCollisions</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCollisions(mesh, entity, mode,
sx,sy,sz, gravityx,gravityy,gravityz, offsetx, offsety, offsetz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, entity as nEntity, </span></p>

<p class=MsoNormal><span lang=RO>mode as Integer, (0=box, 1=mesh,
2=octtreemesh, 3=terrain)</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz as Single (elipsoid radius)</span></p>

<p class=MsoNormal><span lang=RO>gravityx,gravityy,gravityz as Single</span></p>

<p class=MsoNormal><span lang=RO>offsetx, offsety, offsetz as Single (offset
translation of the elipsoid)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create and set a collision response animator,
against an&nbsp; entity and a mesh (mesh, a level, terrain)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665583"></a><a name="_Toc297808075"></a><a
name="_Toc297205963"></a><a name="_Toc293665978"></a><span lang=RO>nSetCollisionsBSP</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCollisionsBSP(meshBSP, nodeBSP, entity,
sx,sy,sz, gravityx,gravityy,gravityz, offsetx, offsety, offsetz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshBSP, nodeBSP as UInteger Ptr,</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz as Single (elipsoid radius)</span></p>

<p class=MsoNormal><span lang=RO>gravityx,gravityy,gravityz as Single</span></p>

<p class=MsoNormal><span lang=RO>offsetx, offsety, offsetz as Single (offset
translation of the elipsoid)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create and set a collision response animator
against an entity &nbsp;and a BSP
level&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>

<h2><a name="_Toc293665584"></a><a name="_Toc297808076"></a><a
name="_Toc297205964"></a><a name="_Toc293665979"></a><span lang=RO>nGetCollisionNodeFromCamera</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCollisionNodeFromCamera(camera)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return a pointer as nENTITY to the collided
node from the camera (else 0)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665585"></a><a name="_Toc297808077"></a><a
name="_Toc297205965"></a><a name="_Toc293665980"></a><span lang=RO>nGetCollisionNodeFromScreenCoordinates</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCollisionNodeFromScreenCoordinates(x,y)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y as Integer (the screen coordinates)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return a pointer as nEntity to the collided
node by a ray from camera to x,y coordinates (else 0)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665586"></a><a name="_Toc297808078"></a><a
name="_Toc297205966"></a><a name="_Toc293665981"></a><span lang=RO>nGetCollisionNodeFromRay</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCollisionNodeFromRay(x1,y1,z1,x2,y2,z2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2 as Single (the ray)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return a pointer to the collided node by a ray
(else
0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665587"></a><a name="_Toc297808079"></a><a
name="_Toc297205967"></a><a name="_Toc293665982"></a><span lang=RO>nGetScreenCoordinatesFrom3Dposition</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetScreenCoordinatesFrom3Dposition(xscreen,
yscreen, xpos,ypos,zpos)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>xscreen, yscreen as Integer</span></p>

<p class=MsoNormal><span lang=RO>xpos,ypos,zpos as Single (3D point)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return in xscreen and yscreen the screen coordinates
from a 3D position</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665588"></a><a name="_Toc297808080"></a><a
name="_Toc297205968"></a><a name="_Toc293665983"></a><span lang=RO>nCreateGeneralTriangleSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateGeneralTriangleSelector(meshnode,mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshnode as&nbsp; UInteger Ptr (or nMesh)</span></p>

<p class=MsoNormal><span lang=RO>mode as Integer (box =0, mesh = 1, octtree=2,
terrain =3)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a general triangle selector and set
selector to mesh, return a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h2><a name="_Toc293665589"></a><a name="_Toc297808081"></a><a
name="_Toc297205969"></a><a name="_Toc293665984"></a><span lang=RO>nCreateTriangleSelectorBSP</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateTriangleSelectorBSP(meshBSP,nodeBSP)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshBSP, nodeBSP as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create and set a triangle selector BSP, return
a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665590"></a><a name="_Toc297808082"></a><a
name="_Toc297205970"></a><a name="_Toc293665985"></a><span lang=RO>nCreateOctTreeTriangleSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateOctTreeTriangleSelector(meshnode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshnode as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create and set an octtree triangle selector,
return a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h2><a name="_Toc293665591"></a><a name="_Toc297808083"></a><a
name="_Toc297205971"></a><a name="_Toc293665986"></a><span lang=RO>nCreateTriangleSelectorFromBoundingBox</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateTriangleSelectorFromBoundingBox(meshnode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshnode as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create and set a triangle selector from a
boundin box, return a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665592"></a><a name="_Toc297808084"></a><a
name="_Toc297205972"></a><a name="_Toc293665987"></a><span lang=RO>nCreateTerrainSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateTerrainSelector(terrain)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create and set a triangle selector for
terrain, return a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665593"></a><a name="_Toc297808085"></a><a
name="_Toc297205973"></a><a name="_Toc293665988"></a><span lang=RO>nCreateMetaTriangleSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMetaTriangleSelector()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a meta triangle selector to add later
others triangle selectors, return a pointer as UInteger Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665594"></a><a name="_Toc297808086"></a><a
name="_Toc297205974"></a><a name="_Toc293665989"></a><span lang=RO>nAddTriangleSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAddTriangleSelector(metats,ts)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>metats, ts as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add a triangle selector to a meta triangle
selector</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665595"></a><a name="_Toc297808087"></a><a
name="_Toc297205975"></a><a name="_Toc293665990"></a><span lang=RO>nRemoveAllTriangleSelectors</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nRemoveAllTriangleSelectors(metats)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>metats as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>remove alls triangle selectors from meta
triangle selector</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665596"></a><a name="_Toc297808088"></a><a
name="_Toc297205976"></a><a name="_Toc293665991"></a><span lang=RO>nRemoveTriangleSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nRemoveTriangleSelector(metats,ts)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>metats, ts as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>remove an individual triangle selector from a
meta triangle selector</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>

<h2><a name="_Toc293665597"></a><a name="_Toc297808089"></a><a
name="_Toc297205977"></a><a name="_Toc293665992"></a><span lang=RO>nGetNodeAndCollisionPointFromCamera</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetNodeAndCollisionPointFromCamera(camera,
node,trisel,xcoll,ycoll,zcoll)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera</span></p>

<p class=MsoNormal><span lang=RO>node as nEntity (or UInteger Ptr)</span></p>

<p class=MsoNormal><span lang=RO>trisel as UInteger Ptr (the triangle selector
of the node)</span></p>

<p class=MsoNormal><span lang=RO>xcoll, ycoll, zcoll as Single </span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>will result in xcoll, ycoll, zcoll the
collision point from camera to the node , as single</span></p>

<p class=MsoNormal><span lang=RO>as a function, will return a value as a node,
as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>ex.</span></p>

<p class=MsoNormal><span lang=RO>Dim as Single xcoll,ycoll,zcoll</span></p>

<p class=MsoNormal><span lang=RO>Dim as UInteger Ptr node, collnode</span></p>

<p class=MsoNormal><span lang=RO>..................................................</span></p>

<p class=MsoNormal><span lang=RO>collnode =
nGetNodeAndCollisionPointFromCamera(camera, node, trisel,xcoll,ycoll,zcoll)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665598"></a><a name="_Toc297808090"></a><a
name="_Toc297205978"></a><a name="_Toc293665993"></a><span lang=RO>nGetNodeAndCollisionPointFromRay</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetNodeAndCollisionPointFromRay(x1,y1,z1,x2,y2,z2,node,
trisel, xcoll,ycoll,zcoll)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2 as Single (the ray)</span></p>

<p class=MsoNormal><span lang=RO>node as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>trisel as UInteger Ptr</span></p>

<p class=MsoNormal><span lang=RO>xcoll,ycoll,zcoll as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>will result in xcoll, ycoll, zcoll the
collision point from a ray passing the node , as single</span></p>

<p class=MsoNormal><span lang=RO>as a function, will return a value as a node,
as UInteger
Ptr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h1><span lang=RO>&nbsp;</span></h1>

<h1><a name="_Toc293665599"></a><a name="_Toc297808091"></a><a
name="_Toc297205979"></a><a name="_Toc293665994"></a><span lang=RO>8.Entity</span></h1>

<h2><span lang=RO>&nbsp;</span></h2>

<h1><a name="_Toc293665600"></a><a name="_Toc297808092"></a><a
name="_Toc297205980"></a><a name="_Toc293665995"></a><span lang=RO>8.1.Entity
control</span></h1>

<h2><a name="_Toc293665601"></a><a name="_Toc297808093"></a><a
name="_Toc297205981"></a><a name="_Toc293665996"></a><span lang=RO>nDeleteEntity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDeleteEntity(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>delete the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665602"></a><a name="_Toc297808094"></a><a
name="_Toc297205982"></a><a name="_Toc293665997"></a><span lang=RO>nShowEntity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nShowEntity(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>show the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665603"></a><a name="_Toc297808095"></a><a
name="_Toc297205983"></a><a name="_Toc293665998"></a><span lang=RO>nHideEntity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nHideEntity(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>hide the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665604"></a><a name="_Toc297808096"></a><a
name="_Toc297205984"></a><a name="_Toc293665999"></a><span lang=RO>nSetNameEntity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetNameEntity(entity, name)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, name as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set a new name of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665605"></a><a name="_Toc297808097"></a><a
name="_Toc297205985"></a><a name="_Toc293666000"></a><span lang=RO>nSetEntityParent</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityParent(entity, parent)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity, parent as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the parent of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665606"></a><a name="_Toc297808098"></a><a
name="_Toc297205986"></a><a name="_Toc293666001"></a><span lang=RO>nSetEntityTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityTexture(entity, texture, layer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, texture as nTexture, layer
as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set a texture layer to the entity (an entity can
have up to 4 texture layers)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665607"></a><a name="_Toc297808099"></a><a
name="_Toc297205987"></a><a name="_Toc293666002"></a><span lang=RO>nSetEntityColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityColor(entity, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, R,G,B as UInteger (0 – 255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the color of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665608"></a><a name="_Toc297808100"></a><a
name="_Toc297205988"></a><a name="_Toc293666003"></a><span lang=RO>nSetEntitySpecularColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntitySpecularColor(entity, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, R,G,B as UInteger (0 – 255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the specular color of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665609"></a><a name="_Toc297808101"></a><a
name="_Toc297205989"></a><a name="_Toc293666004"></a><span lang=RO>nSetEntityShininess</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityShininess(entity, shininess)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, shininess as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the shininess of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665610"></a><a name="_Toc297808102"></a><a
name="_Toc297205990"></a><a name="_Toc293666005"></a><span lang=RO>nSetEntityAlpha</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityAlpha(entity, alphalevel)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, alphalevel as UIteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the alpha level of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665611"></a><a name="_Toc297808103"></a><a
name="_Toc297205991"></a><a name="_Toc293666006"></a><span lang=RO>nSetEntityType</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityType(entity, mat_type)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, mat_type as MATERIAL_TYPE</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>MATERIAL_TYPE:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=RO>EMT_SOLID = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_LIGHTMAP = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_LIGHTMAP_ADD = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_LIGHTMAP_LIGHTING = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_DETAIL_MAP = 4</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_SPHERE_MAP = 5</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_REFLECTION_2_LAYER = 6</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_ADD_COLOR = 7</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_ALPHA_CHANNEL = 8</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_ALPHA_CHANNEL_REF = 9</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_VERTEX_ALPHA = 10</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_REFLECTION_2_LAYER = 11</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_NORMAL_MAP_SOLID = 12</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_PARALLAX_MAP_SOLID = 13</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_PARALLAX_MAP_TRANSPARENT_ADD_COLOR = 14</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_PARALLAX_MAP_TRANSPARENT_VERTEX_ALPHA = 15</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_ONETEXTURE_BLEND = 16</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the type of the all materials of the
entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665612"></a><a name="_Toc297808104"></a><a
name="_Toc297205992"></a><a name="_Toc293666007"></a><span lang=RO>nSetEntityFlag</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityFlag(entity, mat_flag)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, mat_flag as MATERIAL_FLAG</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>MATERIAL_FLAG:</span></p>

<p class=MsoNormal><span lang=RO>MF_WIREFRAME = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_POINTCLOUD = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FLAT = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FULLBRITGH = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_ZBUFFER = 4</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_ZWRITER = 5</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_BACKFACE = 6</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FRONTFACE = 7</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FOG = 8</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_NORMALIZE = 9</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MF_WRAP = 10</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_COLOR_MASK = 11</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_COLOR_MATERIAL = 12</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the flag of the all materials of the
entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665613"></a><a name="_Toc297808105"></a><a
name="_Toc297205993"></a><a name="_Toc293666008"></a><span lang=RO>nCloneEntity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCloneEntity(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>make a clone of the entity, returns a pointer
as nEntity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665614"></a><a name="_Toc297808106"></a><a
name="_Toc297205994"></a><a name="_Toc293666009"></a><span lang=RO>8.2.Entity
movement</span></h1>

<h2><a name="_Toc293665615"></a><a name="_Toc297808107"></a><a
name="_Toc297205995"></a><a name="_Toc293666010"></a><span lang=RO>nSetEntityPosition</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityPosition(entity, x, y, z)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, x,y,z as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the new position of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665616"></a><a name="_Toc297808108"></a><a
name="_Toc297205996"></a><a name="_Toc293666011"></a><span lang=RO>nSetEntityAbsoluteRotation</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityAbsoluteRotation(entity, xangle,
yangle, zangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, xangle, yangle, zangle as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the global rotation of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665617"></a><a name="_Toc297808109"></a><a
name="_Toc297205997"></a><a name="_Toc293666012"></a><span lang=RO>nSetEntityLocalRotation</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityLocalRotation(entity, xstepangle,
ystepangle, zstepangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entityas nEntity, xstepangle,
ystaepangle,zstepangle as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the turning step angle of the entity
around its local axes</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665618"></a><a name="_Toc297808110"></a><a
name="_Toc297205998"></a><a name="_Toc293666013"></a><span lang=RO>nSetEntityLocalRotation2</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityLocalRotation2(entity,
xstepangle, ystepangle, zstepangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entityas nEntity, xstepangle,
ystaepangle,zstepangle as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the turning step angle of the entity
around its local axes</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665619"></a><a name="_Toc297808111"></a><a
name="_Toc297205999"></a><a name="_Toc293666014"></a><span lang=RO>nSetEntityRelMove</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityRelMove(entity, xstep, ystep,
zstep)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, xstep, ystep, zstep as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the linear step to move entity against the
old position</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665620"></a><a name="_Toc297808112"></a><a
name="_Toc297206000"></a><a name="_Toc293666015"></a><span lang=RO>nSetEntityToPoint</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityToPoint(entity1, entity2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity1, entity2 as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>rotate the entity1 toward entity2</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665621"></a><a name="_Toc297808113"></a><a
name="_Toc297206001"></a><a name="_Toc293666016"></a><span lang=RO>nSetEntityPointToTarget</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEntityPointToTarget(entity, xtarget,
ytarget, ztarget)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, xtarget, ytarget, ztarget
as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>rotate the entity toward a target point</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665622"></a><a name="_Toc297808114"></a><a
name="_Toc297206002"></a><a name="_Toc293666017"></a><span lang=RO>8.3.Entity
state</span></h1>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665623"></a><a name="_Toc297808115"></a><a
name="_Toc297206003"></a><a name="_Toc293666018"></a><span lang=RO>nGetEntityX</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityX(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the x position of the entity as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665624"></a><a name="_Toc297808116"></a><a
name="_Toc297206004"></a><a name="_Toc293666019"></a><span lang=RO>nGetEntityY</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityY(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the y position of the entity as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665625"></a><a name="_Toc297808117"></a><a
name="_Toc297206005"></a><a name="_Toc293666020"></a><span lang=RO>nGetEntityZ</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityZ(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the z position of the entity as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665626"></a><a name="_Toc297808118"></a><a
name="_Toc297206006"></a><a name="_Toc293666021"></a><span lang=RO>nGetEntityPitch</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityPitch(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns teh absolute rotation around x axe as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665627"></a><a name="_Toc297808119"></a><a
name="_Toc297206007"></a><a name="_Toc293666022"></a><span lang=RO>nGetEntityYaw</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityYaw(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns teh absolute rotation around y axe as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665628"></a><a name="_Toc297808120"></a><a
name="_Toc297206008"></a><a name="_Toc293666023"></a><span lang=RO>nGetEntityRoll</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityRoll(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns teh absolute rotation around z axe as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665629"></a><a name="_Toc297808121"></a><a
name="_Toc297206009"></a><a name="_Toc293666024"></a><span lang=RO>nGetEntityName</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntityName(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the name of the entity as ZString Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665630"></a><a name="_Toc297808122"></a><a
name="_Toc297206010"></a><a name="_Toc293666025"></a><span lang=RO>nGetLinePick</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetLinePick(x1, y1, z1, x2, y2, z2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2 as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the&nbsp; pointer of the picked entity
by a 3D line, as nEntity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665631"></a><a name="_Toc297808123"></a><a
name="_Toc297206011"></a><a name="_Toc293666026"></a><span lang=RO>nGetEntitiesDistance</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntitiesDistance(entity1, entity2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity1, entity2 as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the distances between 2 entities, as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665632"></a><a name="_Toc297808124"></a><a
name="_Toc297206012"></a><a name="_Toc293666027"></a><span lang=RO>nGetDistance</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetDistance(x1, y1, z1, x2, y2, z2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2 as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the distance between two 3D points, as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h2><a name="_Toc293665633"></a><a name="_Toc297808125"></a><a
name="_Toc297206013"></a><a name="_Toc293666028"></a><span lang=RO>nGetEntitiesCollide</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEntitiesCollide(entity1, entity2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity1, entity2 as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if the two entities collide</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665634"></a><a name="_Toc297808126"></a><a
name="_Toc297206014"></a><a name="_Toc293666029"></a><span lang=RO>nGetDirection</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetDirection(x1,y1,z1,x2,y2,z2,dx,dy,dz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2,dx,dy,dz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns in dx,dy,dz the direction of the 3D
line</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665635"></a><a name="_Toc297808127"></a><a
name="_Toc297206015"></a><a name="_Toc293666030"></a><span lang=RO>nGetHorAngle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetHorAngle(entity, xtarget, ytarget,
ztarget)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, xtarget, ytarget, ztarget
as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the horizontale angle between the
entity and a target, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665636"></a><a name="_Toc293666031"></a><span lang=RO>&nbsp;</span></h1>

<h1><a name="_Toc297206016"></a><a name="_Toc297808128"></a><span lang=RO>9.Fader</span></h1>

<h2><a name="_Toc293665637"></a><a name="_Toc297808129"></a><a
name="_Toc297206017"></a><a name="_Toc293666032"></a><span lang=RO>nSetFadeIn</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetFadeIn(t)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>t as UInteger, time</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the time transition of the FadeIn</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665638"></a><a name="_Toc297808130"></a><a
name="_Toc297206018"></a><a name="_Toc293666033"></a><span lang=RO>nSetFadeOut</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetFadeOut(t)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>t as UInteger, time</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the time transition of the FadeOut</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665639"></a><a name="_Toc297808131"></a><a
name="_Toc297206019"></a><a name="_Toc293666034"></a><span lang=RO>nSetFaderColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetFaderColor(R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>R,G,B as UInteger (0 – 255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the fader color</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665640"></a><a name="_Toc297808132"></a><a
name="_Toc297206020"></a><a name="_Toc293666035"></a><span lang=RO>nGetFadeIsReady</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetFadeIsReady()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if fader is ready</span></p>

<h2><span lang=RO>&nbsp;</span></h2>

<h3><span lang=RO>&nbsp;</span></h3>

<h1><a name="_Toc293665641"></a><a name="_Toc297808133"></a><a
name="_Toc297206021"></a><a name="_Toc293666036"></a><span lang=RO>10.File</span></h1>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665642"></a><a name="_Toc297808134"></a><a
name="_Toc297206022"></a><a name="_Toc293666037"></a><span lang=RO>nChangeDirectory</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nChangeDirectory(directory)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>directory As Zstring Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>change the current directory to directory </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665643"></a><a name="_Toc297808135"></a><a
name="_Toc297206023"></a><a name="_Toc293666038"></a><span lang=RO>nGetExistFile</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetExistFile(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as Zstring ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if file exist</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665644"></a><a name="_Toc297808136"></a><a
name="_Toc297206024"></a><a name="_Toc293666039"></a><span lang=RO>nLoadZip</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadZip(zip_file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>zip_file as Zstring ptr, the zip file</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a zip file</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665645"></a><a name="_Toc297808137"></a><a
name="_Toc297206025"></a><a name="_Toc293666040"></a><span lang=RO>File I/O
funtions</span></h2>

<p class=MsoNormal>You can use the native File I/O functions of the FreeBasic language,
see the doc file of the FreeBasic.</p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665646"></a><a name="_Toc297808138"></a><a
name="_Toc297206026"></a><a name="_Toc293666041"></a><span lang=RO>nLoadScene</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadScene(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as Zstring ptr, the irr file</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a irr scene before saved</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665647"></a><a name="_Toc297808139"></a><a
name="_Toc297206027"></a><a name="_Toc293666042"></a><span lang=RO>nSaveScene</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSaveScene(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as Zstring ptr, the irr file</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>save an irr scene</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665648"></a><a name="_Toc297808140"></a><a
name="_Toc297206028"></a><a name="_Toc293666043"></a><span lang=RO>11.Font</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665649"></a><a name="_Toc297808141"></a><a
name="_Toc297206029"></a><a name="_Toc293666044"></a><span lang=RO>nLoadFont</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadFont(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as Zstring ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a font file and returns a pointer as
nFONT</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665650"></a><a name="_Toc297808142"></a><a
name="_Toc297206030"></a><a name="_Toc293666045"></a><span lang=RO>nSetFont</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetFont(font)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>font as nFont</span></p>

<p class=MsoNormal><span lang=RO>Description:</span></p>

<p class=MsoNormal><span lang=RO>set the active font to use</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665651"></a><a name="_Toc297808143"></a><a
name="_Toc297206031"></a><a name="_Toc293666046"></a><span lang=RO>nDrawFontText</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawFontText(x, y, text_string, cenx,
ceny)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y as Integer, 2D position on the screen</span></p>

<p class=MsoNormal><span lang=RO>text as ZString ptr, the string text to write</span></p>

<p class=MsoNormal><span lang=RO>cenx, ceny as Integer (offset)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>writes a string text on the screen</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665652"></a><a name="_Toc297808144"></a><a
name="_Toc297206032"></a><a name="_Toc293666047"></a><span lang=RO>12.Globals</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665653"></a><a name="_Toc297808145"></a><a
name="_Toc297206033"></a><a name="_Toc293666048"></a><span lang=RO>nSetBackGroundColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBackGroundColor(R,G,B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>R,G,B as UInteger (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the background color</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665654"></a><a name="_Toc297808146"></a><a
name="_Toc297206034"></a><a name="_Toc293666049"></a><span lang=RO>nSetAmbientLight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetAmbientLight(R,G,B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>R,G,B as UInteger (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the ambient light color</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665655"></a><a name="_Toc297808147"></a><a
name="_Toc297206035"></a><a name="_Toc293666050"></a><span lang=RO>nSetShadowColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetShadowColor(r,g,b,a)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>R,G,B,A as UInteger (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the shadow color</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><span lang=RO>&nbsp;</span></h2>

<h2><a name="_Toc293665656"></a><a name="_Toc297808148"></a><a
name="_Toc297206036"></a><a name="_Toc293666051"></a><span lang=RO>nSetFog</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetFog(R,G,B,density)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>R,G,B as UInteger, density as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the color and the density of the fog</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665657"></a><a name="_Toc297808149"></a><a
name="_Toc297206037"></a><a name="_Toc293666052"></a><span lang=RO>nScreenShot</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nScreenShot()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>take a screenshoot</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665658"></a><a name="_Toc297808150"></a><a
name="_Toc297206038"></a><a name="_Toc293666053"></a><span lang=RO>InitEngine</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>InitEngine(drivertype,w,h,bpp,mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>drivertype as Integer ( 0=OpenGL,
1=DirectX9.0c)</span></p>

<p class=MsoNormal><span lang=RO>w,h as Integer (width, height resolution)</span></p>

<p class=MsoNormal><span lang=RO>bpp as Integer (bit per pixel)</span></p>

<p class=MsoNormal><span lang=RO>mode as Integer (0=windowed, 1= fullscreen)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>init the Clady3D engine</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665659"></a><a name="_Toc297808151"></a><a
name="_Toc297206039"></a><a name="_Toc293666054"></a><span lang=RO>EngineRun</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>EngineRun()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if engine is running, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665660"></a><a name="_Toc297808152"></a><a
name="_Toc297206040"></a><a name="_Toc293666055"></a><span lang=RO>UpdateEngine</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>UpdateEngine(timestep, updatemode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timesptep as Single </span></p>

<p class=MsoNormal><b><span lang=RO>updatemode :</span></b></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UP_ALL = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UP_GRAPHICS = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UP_PHYSICS = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UP_SOUNDS = 3</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>update the engine in the main loop</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665661"></a><a name="_Toc297808153"></a><a
name="_Toc297206041"></a><a name="_Toc293666056"></a><span lang=RO>CloseEngine</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>CloseEngine()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>close the engine</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665662"></a><a name="_Toc297808154"></a><a
name="_Toc297206042"></a><a name="_Toc293666057"></a><span lang=RO>EndEngine</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>EndEngine()</span></b></p>

<p class=MsoNormal><span lang=RO>Description:</span></p>

<p class=MsoNormal><span lang=RO>end the engine</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665663"></a><a name="_Toc297808155"></a><a
name="_Toc297206043"></a><a name="_Toc293666058"></a><span lang=RO>nEnableAntialias</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nEnableAntialias()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>enable antialias</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665664"></a><a name="_Toc297808156"></a><a
name="_Toc297206044"></a><a name="_Toc293666059"></a><span lang=RO>nEnableVsync</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nEnableVsync()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>enable vsync</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665665"></a><a name="_Toc297808157"></a><a
name="_Toc297206045"></a><a name="_Toc293666060"></a><span lang=RO>nSetFrameRateLimit</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetFrameRateLimit(limit)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>limit as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the frame rate limit</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665666"></a><a name="_Toc297808158"></a><a
name="_Toc297206046"></a><a name="_Toc293666061"></a><span lang=RO>BeginScene</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>BeginScene()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>begin the scene (render)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665667"></a><a name="_Toc297808159"></a><a
name="_Toc297206047"></a><a name="_Toc293666062"></a><span lang=RO>EndScene</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>EndScene()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>end the scene</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h2><a name="_Toc293665668"></a><a name="_Toc297808160"></a><a
name="_Toc297206048"></a><a name="_Toc293666063"></a><span lang=RO>Fps</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>Fps()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the frames per second, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665669"></a><a name="_Toc297808161"></a><a
name="_Toc297206049"></a><a name="_Toc293666064"></a><span lang=RO>nGetTrisRendered</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTrisRendered()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the triangles rendered as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665670"></a><a name="_Toc297808162"></a><a
name="_Toc297206050"></a><a name="_Toc293666065"></a><span lang=RO>nGetLightCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetLightCount()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the light count, as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665671"></a><a name="_Toc297808163"></a><a
name="_Toc297206051"></a><a name="_Toc293666066"></a><span lang=RO>nGetPrimitiveCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetPrimitiveCount()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the primitives count, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665672"></a><a name="_Toc297808164"></a><a
name="_Toc297206052"></a><a name="_Toc293666067"></a><span lang=RO>nGetBodyCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCount()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the bodies count, as Integer</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665673"></a><a name="_Toc297808165"></a><a
name="_Toc297206053"></a><a name="_Toc293666068"></a><span lang=RO>13.Graphics
2D</span></h1>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h2><a name="_Toc293665674"></a><a name="_Toc297808166"></a><a
name="_Toc297206054"></a><a name="_Toc293666069"></a><span lang=RO>nSetTransparency2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetTransparency2D(transparency_level)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>transparency_level as Uinteger, level of
transparency (0 to 255);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the transparency of 2d graphic objects on
the screen;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665675"></a><a name="_Toc297808167"></a><a
name="_Toc297206055"></a><a name="_Toc293666070"></a><span lang=RO>nSetColors2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetColors2D(R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>R as Uinteger, G as Uinteger, B as Uinteger (0
to 255);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the colors for the graphic operations on
the screen</span>;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665676"></a><a name="_Toc297808168"></a><a
name="_Toc297206056"></a><a name="_Toc293666071"></a><span lang=RO>nDrawLine2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawLine2D(x1, y1, x2, y2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,x2,y2 as Integer ( x1y1 start point,
x2y2 end point);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws a 2D line on the screen</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665677"></a><a name="_Toc297808169"></a><a
name="_Toc297206057"></a><a name="_Toc293666072"></a><span lang=RO>nDrawRect2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawRect2D(x, y, width, height)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y,width,height as Integer (x,y top-left
corner);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws a rectangle 2D on the screen;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665678"></a><a name="_Toc297808170"></a><a
name="_Toc297206058"></a><a name="_Toc293666073"></a><span lang=RO>nDrawPixel2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawPixel2D(x, y)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y as Integer;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws a pixel at &nbsp;x,y coordinates on the
screen;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665679"></a><a name="_Toc297808171"></a><a
name="_Toc297206059"></a><a name="_Toc293666074"></a><span lang=RO>nDrawImage2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawImage2D(texture, x, y)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture, x,y as Integer;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws an image from a texture on the screen
(top-left corner at x,y)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665680"></a><a name="_Toc297808172"></a><a
name="_Toc297206060"></a><a name="_Toc293666075"></a><span lang=RO>nDrawImage2DwithAlpha</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawImage2DwithAlpha(texture, x, y,
usealpha)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture, x,y as Integer, usealpha
as Integer (0 – no alpha, 1 – with alpha)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws an image on the screen using the alpha
channel(the texture must be a .tga or a .png file);</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665681"></a><a name="_Toc297808173"></a><a
name="_Toc297206061"></a><a name="_Toc293666076"></a><span lang=RO>nDrawOval2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawOval2D(x, y, radius)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y as Integer (center), radius as Single;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draws an circle on the screen</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665682"></a><a name="_Toc297808174"></a><a
name="_Toc297206062"></a><a name="_Toc293666077"></a><span lang=RO>nDrawImageSprites2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawImageSprites2D(texture, x, y, start_x,
start_y, end_x, end_y)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x, y, start_x, start_y,end_x, end_y as
Integer;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>Draws a part of a texture at x,y on the screen
, starting at start_x, start_y, ending at end_x, end_y;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665683"></a><a name="_Toc297808175"></a><a
name="_Toc297206063"></a><a name="_Toc293666078"></a><span lang=RO>nCreateImage</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateImage(w, h, color_format)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>w,h as Integer, color_format as <b>IRR_COLOR_FORMAT
</b>enumeration;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;A color format specifies how color
information is stored:</span></p>

<p class=MsoNormal><b><span lang=RO>ECF_A1R5G5B5</span></b><span lang=RO> =
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16 bit color format used by the software
driver, and thus preferred by all other irrlicht engine video drivers. There
are 5 bits for every color component, and a single bit is left for alpha
information.&nbsp; </span></p>

<p class=MsoNormal><b><span lang=RO>ECF_R5G6B5</span></b><span lang=RO> =
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Standard 16 bit color
format.</span></p>

<p class=MsoNormal><b><span lang=RO>ECF_R8G8B8</span></b><span lang=RO> =
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;24 bit color, no
alpha channel, but 8 bit for red, green and blue. </span></p>

<p class=MsoNormal><b><span lang=RO>ECF_A8R8G8B8</span></b><span lang=RO> =
3&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Default 32 bit color format. 8 bits are used
for every component: red, green, blue and alpha.&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a blank image in RAM memory (returns a
pointer as nImage);</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;nLoadImageFromFile</span></p>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadImageFromFile(filename)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>filename as zstringptr ;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load an image from file in RAM memory
&nbsp;(returns a pointer as nImage)</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665684"></a><a name="_Toc297808176"></a><a
name="_Toc297206064"></a><a name="_Toc293666079"></a><span lang=RO>nRemoveImage</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nRemoveImage(image)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;remove an image freeing its resources</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665685"></a><a name="_Toc297808177"></a><a
name="_Toc297206065"></a><a name="_Toc293666080"></a><span lang=RO>nLockImage</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLockImage(image)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>locks the image and returns a pointer to the
pixels</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665686"></a><a name="_Toc297808178"></a><a
name="_Toc297206066"></a><a name="_Toc293666081"></a><span lang=RO>nUnlockImage</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nUnlockImage(image)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>unlock the image, presumably after it has been
modified</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665687"></a><a name="_Toc297808179"></a><a
name="_Toc297206067"></a><a name="_Toc293666082"></a><span lang=RO>nCopyImageToScaling</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCopyImageToScaling(imgsrc, imgtarget)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>imgsrc,imgtarget as nImage;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>copy and scaling an image</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665688"></a><a name="_Toc297808180"></a><a
name="_Toc297206068"></a><a name="_Toc293666083"></a><span lang=RO>nGetImageWidth</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetImageWidth(image)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>Returns the width of the image in pixels;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665689"></a><a name="_Toc297808181"></a><a
name="_Toc297206069"></a><a name="_Toc293666084"></a><span lang=RO>nGetImageHeight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetImageHeight(image)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>Returns the height of the image in pixels;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665690"></a><a name="_Toc297808182"></a><a
name="_Toc297206070"></a><a name="_Toc293666085"></a><span lang=RO>nBlendImages</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nBlendImages(destination_image,
source_image, x_offset, y_offset, operation)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>destination_image, source_image as nImage;
x_offset, y_offset, operation as Integer;</span></p>

<p class=MsoNormal><span lang=RO>blend operations:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_SCREEN &nbsp;= 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_ADD&nbsp; = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_SUBTRACT&nbsp; = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_MULTIPLY&nbsp; = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_DIVIDE&nbsp; = 4</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>blend the source image into the destination
image to create a single image;</span></p>

<p class=MsoNormal><span lang=RO>Returns 1 if success;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665691"></a><a name="_Toc297808183"></a><a
name="_Toc297206071"></a><a name="_Toc293666086"></a><span lang=RO>nAlphaBlendImages</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAlphaBlendImages(destination_image,
source_image, alpha_image, alphacolorchannel)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>destination_image, source_image, alpha_image
as nImage;</span></p>

<p class=MsoNormal><span lang=RO>alphacolorchannel as ALPHA_CHANNEL_COLOR;</span></p>

<p class=MsoNormal><span lang=RO>ALPHA_CHANNEL_COLOR :</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALPHA_RED &nbsp;= 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALPHA_GREEN
&nbsp;= 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALPHA_BLUE &nbsp;= 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALPHA_ALPHA &nbsp;= 4</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>blend the source image into the destination
image using a third alphamap with rgb channels to create a single image</span></p>

<p class=MsoNormal><span lang=RO>Returns 1 if success;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665692"></a><a name="_Toc297808184"></a><a
name="_Toc297206072"></a><a name="_Toc293666087"></a><span lang=RO>nPaintTileImageWithAlpha</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPaintTileImageWithAlpha(destination_image,
source_image, xpos, ypos, radius, alpha)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>destination_image, source_image as nImage;</span></p>

<p class=MsoNormal><span lang=RO>xpos, ypos, radius, alpha as Integer; (alpha =
0 to 255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>paint the destination(base) image with a
source image using an alpha value at x,y position of radius</span></p>

<p class=MsoNormal><span lang=RO>Returns 1 if success;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665693"></a><a name="_Toc297808185"></a><a
name="_Toc297206073"></a><a name="_Toc293666088"></a><span lang=RO>14.Grass</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665694"></a><a name="_Toc297808186"></a><a
name="_Toc297206074"></a><a name="_Toc293666089"></a><span lang=RO>nAddGrass</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAddGrass(terrain, x, z, patchSize,
grassScale, maxDensity, dataPositionX, dataPositionY, heightMap, textureMap,
grassMap, grassTexture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain, </span></p>

<p class=MsoNormal><span lang=RO>x,z, as Integer,</span></p>

<p class=MsoNormal><span lang=RO>patchSize as Integer (of the terrain),</span></p>

<p class=MsoNormal><span lang=RO>grassScale as Single,</span></p>

<p class=MsoNormal><span lang=RO>maxDensity as UInteger,</span></p>

<p class=MsoNormal><span lang=RO>dataPozitionX, dataPositionY as Integer,</span></p>

<p class=MsoNormal><span lang=RO>heightMap as nImage,</span></p>

<p class=MsoNormal><span lang=RO>textureMap as nImage,</span></p>

<p class=MsoNormal><span lang=RO>grassMap as nImage,</span></p>

<p class=MsoNormal><span lang=RO>grassTexture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add grass to scene , returns a pointer as
nGrass</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665695"></a><a name="_Toc297808187"></a><a
name="_Toc297206075"></a><a name="_Toc293666090"></a><span lang=RO>nSetGrassDensity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetGrassDensity(grass, density, distance)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>grass as nGrass,</span></p>

<p class=MsoNormal><span lang=RO>density as Integer,</span></p>

<p class=MsoNormal><span lang=RO>distance as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set grass density</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665696"></a><a name="_Toc297808188"></a><a
name="_Toc297206076"></a><a name="_Toc293666091"></a><span lang=RO>nSetGrassWind</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetGrassWind(grass, strenghtwind,
regularity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>grass as nGrass,</span></p>

<p class=MsoNormal><span lang=RO>strenghtwind as Single,</span></p>

<p class=MsoNormal><span lang=RO>regularity as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set&nbsp; grass wind</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665697"></a><a name="_Toc297808189"></a><a
name="_Toc297206077"></a><a name="_Toc293666092"></a><span lang=RO>nGetGrassDrawCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetGrassDrawCount(grass)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>grass as nGrass</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns grass count as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665698"></a><a name="_Toc297808190"></a><a
name="_Toc297206078"></a><a name="_Toc293666093"></a>15.Input</h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665699"></a><a name="_Toc297808191"></a><a
name="_Toc297206079"></a><a name="_Toc293666094"></a><span lang=RO>KeyDown</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>KeyDown(keystate)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>keystate -&nbsp; see inputstate list</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if true</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665700"></a><a name="_Toc297808192"></a><a
name="_Toc297206080"></a><a name="_Toc293666095"></a><span lang=RO>KeyHit</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>KeyHit(keystate)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>keystate -&nbsp; see inputstate list</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if true</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665701"></a><a name="_Toc297808193"></a><a
name="_Toc297206081"></a><a name="_Toc293666096"></a><span lang=RO>MouseHit</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>MouseHit(state)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>state -&nbsp; see inputstate list</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if true</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665702"></a><a name="_Toc297808194"></a><a
name="_Toc297206082"></a><a name="_Toc293666097"></a><span lang=RO>MouseDown</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>MouseDown(state)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>state -&nbsp; see inputstate list</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if true</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665703"></a><a name="_Toc297808195"></a><a
name="_Toc297206083"></a><a name="_Toc293666098"></a><span lang=RO>MoveMouse</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>MoveMouse(x, y)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x, y as integer, mouse position</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>move mouse at x,y points</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665704"></a><a name="_Toc297808196"></a><a
name="_Toc297206084"></a><a name="_Toc293666099"></a><span lang=RO>nGetMouseWheel</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetMouseWheel()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns + or – if mouse wheel is active</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665705"></a><a name="_Toc297808197"></a><a
name="_Toc297206085"></a><a name="_Toc293666100"></a><span lang=RO>nGetMouseX</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetMouseX()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns x mouse position as integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665706"></a><a name="_Toc297808198"></a><a
name="_Toc297206086"></a><a name="_Toc293666101"></a><span lang=RO>nGetMouseY</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetMouseY()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns y mouse position as integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665707"></a><a name="_Toc297808199"></a><a
name="_Toc297206087"></a><a name="_Toc293666102"></a><span lang=RO>ShowMouse</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>ShowMouse()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>shows the mouse on the screen</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665708"></a><a name="_Toc297808200"></a><a
name="_Toc297206088"></a><a name="_Toc293666103"></a><span lang=RO>HideMouse</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>HideMouse()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>hides the mouse</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665709"></a><a name="_Toc297808201"></a><a
name="_Toc297206089"></a><a name="_Toc293666104"></a><span lang=RO>Joystick</span></h2>

<p class=MsoNormal>You can use the native function of the FreeBasic language,
see the doc file of the FreeBasic (GetJoystick()).</p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>example:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>Dim x as Single</span></p>

<p class=MsoNormal><span lang=RO>Dim y as Single</span></p>

<p class=MsoNormal><span lang=RO>Dim buttons as Integer</span></p>

<p class=MsoNormal><span lang=RO>Dim result as Integer</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>......................................</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>in the main loop:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>result = <b>GetJoystick</b>(JoystickID,
buttons, x,y)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665710"></a><a name="_Toc297808202"></a><a
name="_Toc297206090"></a><a name="_Toc293666105"></a>Keyboard &amp; Mouse</h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665711"></a><a name="_Toc297808203"></a><a
name="_Toc297206091"></a><a name="_Toc293666106"></a>Keyboard</h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>KEY_LBUTTON </span></p>

<p class=MsoNormal><span lang=RO>KEY_RBUTTON </span></p>

<p class=MsoNormal><span lang=RO>KEY_CANCEL </span></p>

<p class=MsoNormal><span lang=RO>KEY_MBUTTON </span></p>

<p class=MsoNormal><span lang=RO>KEY_XBUTTON1 </span></p>

<p class=MsoNormal><span lang=RO>KEY_XBUTTON2 </span></p>

<p class=MsoNormal><span lang=RO>KEY_BACK&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_TAB&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_CLEAR </span></p>

<p class=MsoNormal><span lang=RO>KEY_RETURN&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_SHIFT </span></p>

<p class=MsoNormal><span lang=RO>KEY_CONTROL </span></p>

<p class=MsoNormal><span lang=RO>KEY_MENU </span></p>

<p class=MsoNormal><span lang=RO>KEY_PAUSE&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_CAPITAL </span></p>

<p class=MsoNormal><span lang=RO>KEY_KANA </span></p>

<p class=MsoNormal><span lang=RO>KEY_HANGUEL</span></p>

<p class=MsoNormal><span lang=RO>KEY_HANGUL </span></p>

<p class=MsoNormal><span lang=RO>KEY_JUNJA </span></p>

<p class=MsoNormal><span lang=RO>KEY_FINAL&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_HANJA </span></p>

<p class=MsoNormal><span lang=RO>KEY_KANJI </span></p>

<p class=MsoNormal><span lang=RO>KEY_ESCAPE </span></p>

<p class=MsoNormal><span lang=RO>KEY_CONVERT&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NONCONVERT&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_ACCEPT </span></p>

<p class=MsoNormal><span lang=RO>KEY_MODECHANGE </span></p>

<p class=MsoNormal><span lang=RO>KEY_SPACE&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_PRIOR </span></p>

<p class=MsoNormal><span lang=RO>KEY_NEXT </span></p>

<p class=MsoNormal><span lang=RO>KEY_END </span></p>

<p class=MsoNormal><span lang=RO>KEY_HOME </span></p>

<p class=MsoNormal><span lang=RO>KEY_LEFT </span></p>

<p class=MsoNormal><span lang=RO>KEY_UP&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_RIGHT&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_DOWN&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_SELECT </span></p>

<p class=MsoNormal><span lang=RO>KEY_PRINT&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_EXECUT </span></p>

<p class=MsoNormal><span lang=RO>KEY_SNAPSHOT </span></p>

<p class=MsoNormal><span lang=RO>KEY_INSERT&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_DELETE&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_HELP </span></p>

<p class=MsoNormal><span lang=RO>#define KEY_0&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_1 </span></p>

<p class=MsoNormal><span lang=RO>KEY_2 </span></p>

<p class=MsoNormal><span lang=RO>KEY_3 </span></p>

<p class=MsoNormal><span lang=RO>KEY_4&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_5 </span></p>

<p class=MsoNormal><span lang=RO>KEY_6 </span></p>

<p class=MsoNormal><span lang=RO>KEY_7 </span></p>

<p class=MsoNormal><span lang=RO>KEY_8&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_9 </span></p>

<p class=MsoNormal><span lang=RO>KEY_A </span></p>

<p class=MsoNormal><span lang=RO>KEY_B&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_C&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_D </span></p>

<p class=MsoNormal><span lang=RO>KEY_E </span></p>

<p class=MsoNormal><span lang=RO>KEY_F </span></p>

<p class=MsoNormal><span lang=RO>KEY_G&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_H&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_I&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_J&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_K&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_L&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_M&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_N </span></p>

<p class=MsoNormal><span lang=RO>KEY_O&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_P </span></p>

<p class=MsoNormal><span lang=RO>KEY_Q</span></p>

<p class=MsoNormal><span lang=RO>KEY_R&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_S&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_T&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_U&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_V </span></p>

<p class=MsoNormal><span lang=RO>KEY_W&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_X&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_Y </span></p>

<p class=MsoNormal><span lang=RO>KEY_Z&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_LWIN&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_RWIN </span></p>

<p class=MsoNormal><span lang=RO>KEY_APPS&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_SLEEP </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD0&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD1&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD2&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD3&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD4&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD5&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD6&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD7 </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD8&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMPAD9 </span></p>

<p class=MsoNormal><span lang=RO>KEY_MULTIPLY </span></p>

<p class=MsoNormal><span lang=RO>KEY_ADD </span></p>

<p class=MsoNormal><span lang=RO>KEY_SEPARATOR </span></p>

<p class=MsoNormal><span lang=RO>KEY_SUBTRACT </span></p>

<p class=MsoNormal><span lang=RO>KEY_DECIMAL </span></p>

<p class=MsoNormal><span lang=RO>KEY_DIVIDE </span></p>

<p class=MsoNormal><span lang=RO>KEY_F1&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F2 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F3 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F4 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F5&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F6 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F7 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F8 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F9&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F10 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F11&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F12 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F13 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F14 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F15 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F16&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F17&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F18&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_F19 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F20 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F21 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F22 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F23 </span></p>

<p class=MsoNormal><span lang=RO>KEY_F24 </span></p>

<p class=MsoNormal><span lang=RO>KEY_NUMLOCK&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_SCROLL </span></p>

<p class=MsoNormal><span lang=RO>KEY_LSHIFT </span></p>

<p class=MsoNormal><span lang=RO>KEY_RSHIFT </span></p>

<p class=MsoNormal><span lang=RO>KEY_LCONTROL&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_RCONTROL </span></p>

<p class=MsoNormal><span lang=RO>KEY_LMENU </span></p>

<p class=MsoNormal><span lang=RO>KEY_RMENU&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_PLUS&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>KEY_COMMA </span></p>

<p class=MsoNormal><span lang=RO>KEY_MINUS </span></p>

<p class=MsoNormal><span lang=RO>KEY_PERIOD </span></p>

<p class=MsoNormal><span lang=RO>KEY_ATTN </span></p>

<p class=MsoNormal><span lang=RO>KEY_CRSEL </span></p>

<p class=MsoNormal><span lang=RO>KEY_EXSEL </span></p>

<p class=MsoNormal><span lang=RO>KEY_EREOF </span></p>

<p class=MsoNormal><span lang=RO>KEY_PLAY </span></p>

<p class=MsoNormal><span lang=RO>KEY_ZOOM </span></p>

<p class=MsoNormal><span lang=RO>KEY_PA1 </span></p>

<p class=MsoNormal><span lang=RO>KEY_OEM_CLEAR </span></p>

<p class=MsoNormal><span lang=RO>KEY_CODES_COUNT </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665712"></a><a name="_Toc297808204"></a><a
name="_Toc297206092"></a><a name="_Toc293666107"></a>Mouse</h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>MOUSE_LEFT</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>MOUSE_MIDDLE </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>MOUSE_RIGHT </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665713"></a><a name="_Toc297808205"></a><a
name="_Toc297206093"></a><a name="_Toc293666108"></a><span lang=RO>16.Lens
Flare</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665714"></a><a name="_Toc297808206"></a><a
name="_Toc297206094"></a><a name="_Toc293666109"></a><span lang=RO>nCreateLensFlareNode</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateLensFlareNode(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a lens flare, returns a pointer as
nLensFlare</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665715"></a><a name="_Toc297808207"></a><a
name="_Toc297206095"></a><a name="_Toc293666110"></a><span lang=RO>nsetLensFlareScale</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nsetLensFlareScale(flare, source, optics)</span></b><span
lang=RO><br>
where:</span></p>

<p class=MsoNormal><span lang=RO>flare as nLensFlare,</span></p>

<p class=MsoNormal><span lang=RO>source as Single,</span></p>

<p class=MsoNormal><span lang=RO>optics as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set lens flare</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665716"></a><a name="_Toc297808208"></a><a
name="_Toc297206096"></a><a name="_Toc293666111"></a><span lang=RO>17.Light</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665717"></a><a name="_Toc297808209"></a><a
name="_Toc297206097"></a><a name="_Toc293666112"></a><span lang=RO>nCreateLight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateLight(mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mode as LIGHT_TYPE</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=RO>LGT_POINT = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
LGT_SPOT = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
LGT_DIRECTIONAL = 2</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a light (point, spot or directional),
returns a pointer as nLight</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665718"></a><a name="_Toc297808210"></a><a
name="_Toc297206098"></a><a name="_Toc293666113"></a><span lang=RO>nSetLightRadius</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightRadius(light, radius)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight, radius as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the radius light</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665719"></a><a name="_Toc297808211"></a><a
name="_Toc297206099"></a><a name="_Toc293666114"></a><span lang=RO>nSetLightCastShadow</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightCastShadow(light)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the light to cast shadow (later, must set
mesh&nbsp; cast shadow)</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665720"></a><a name="_Toc297808212"></a><a
name="_Toc297206100"></a><a name="_Toc293666115"></a><span lang=RO>nSetLightColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightColor(light, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight, R, G, B as UInteger (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the light color</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665721"></a><a name="_Toc297808213"></a><a
name="_Toc297206101"></a><a name="_Toc293666116"></a><span lang=RO>nSetLightFalloff</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightFalloff(light, falloff)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight falloff as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><a name=0LightFalloff>Changing the value of “</a><span
lang=RO>falloff</span>” can decrease the intensity between exterior and
interior of the cone of the spot light</p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665722"></a><a name="_Toc297808214"></a><a
name="_Toc297206102"></a><a name="_Toc293666117"></a><span lang=RO>nSetLightConeAngles</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightConeAngles(light, inner, outer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight, inner, outer as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the angles of the spot light</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665723"></a><a name="_Toc297808215"></a><a
name="_Toc297206103"></a><a name="_Toc293666118"></a><span lang=RO>nSetLightAttenuation</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightAttenuation(light, c, l, q)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight, c, l, q as Single constant,
linear, quadratic)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the light attenuation</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665724"></a><a name="_Toc297808216"></a><a
name="_Toc297206104"></a><a name="_Toc293666119"></a><span lang=RO>nSetLightDirection</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLightDirection(light, dx, dy, dz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>light as nLight, dx,dy,dz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the light direction</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO
style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h1><a name="_Toc293665725"></a><a name="_Toc297808217"></a><a
name="_Toc297206105"></a><a name="_Toc293666120"></a><span lang=RO>18.Materials</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665726"></a><a name="_Toc297808218"></a><a
name="_Toc297206106"></a><a name="_Toc293666121"></a><span lang=RO>18.1.For
meshes</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>A mesh may have
many materials on them and each material may have up to 4 texture layers,
depends of the material type</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665727"></a><a name="_Toc297808219"></a><a
name="_Toc297206107"></a><a name="_Toc293666122"></a><span lang=RO>nSetMaterialType</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialType(entity, mat_num, mat_type)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, mat_num as UInteger, mat_type
as MATERIAL_TYPE</span></p>

<p class=MsoNormal><span lang=RO>mat_num is the number of the material (start
with 0)</span></p>

<p class=MsoNormal><span lang=RO>mat_type is the type of the material, see
MATERIAL_TYPE list</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the material type&nbsp; of the entity, one
by one, individual</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>MATERIAL_TYPE:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>EMT_SOLID = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_LIGHTMAP = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_LIGHTMAP_ADD = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_LIGHTMAP_LIGHTING = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_DETAIL_MAP = 4</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_SPHERE_MAP = 5</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_REFLECTION_2_LAYER = 6</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_ADD_COLOR = 7</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_ALPHA_CHANNEL = 8</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_ALPHA_CHANNEL_REF = 9</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_VERTEX_ALPHA = 10</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_TRANSPARENT_REFLECTION_2_LAYER = 11</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_NORMAL_MAP_SOLID = 12</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_PARALLAX_MAP_SOLID = 13</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_PARALLAX_MAP_TRANSPARENT_ADD_COLOR = 14</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_PARALLAX_MAP_TRANSPARENT_VERTEX_ALPHA = 15</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
EMT_ONETEXTURE_BLEND = 16</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665728"></a><a name="_Toc297808220"></a><a
name="_Toc297206108"></a><a name="_Toc293666123"></a><span lang=RO>nSetMaterialFlag</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialFlag(entity, mat_num, mat_flag,
mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, mat_num as UInteger,
mat_flag as MATERIAL_FLAG, mode as Integer</span></p>

<p class=MsoNormal><span lang=RO>mat_num is the number of the material (start
with 0)</span></p>

<p class=MsoNormal><span lang=RO>mat_flag is the flag of the material, see
MATERIAL_FLAG list</span></p>

<p class=MsoNormal><span lang=RO>mode can be 0 or 1, means off or on</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the material flag of the entity, one by
one, individual</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>MATERIAL_FLAG:</span></p>

<p class=MsoNormal><span lang=RO>MF_WIREFRAME = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_POINTCLOUD = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FLAT = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FULLBRITGH = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_ZBUFFER = 4</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_ZWRITER = 5</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_BACKFACE = 6</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FRONTFACE = 7</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_FOG = 8</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_NORMALIZE = 9</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MF_WRAP = 10</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_COLOR_MASK = 11</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
MF_COLOR_MATERIAL = 12</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665729"></a><a name="_Toc297808221"></a><a
name="_Toc297206109"></a><a name="_Toc293666124"></a><span lang=RO>nSetMaterialTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialTexture(entity, num_mat,
texture, layer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger,
texture as nTexture, layer as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>an entity can have more materials and each
material can have up to 4 texture layers, depends by material type</span></p>

<p class=MsoNormal><span lang=RO>set the texture for layer „layer” for material
mat_num of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665730"></a><a name="_Toc297808222"></a><a
name="_Toc297206110"></a><a name="_Toc293666125"></a><span lang=RO>nSetMaterialColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialColor(entity, num_mat, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger, R,G,B
as UInteger (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the material color</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665731"></a><a name="_Toc297808223"></a><a
name="_Toc297206111"></a><a name="_Toc293666126"></a><span lang=RO>nSetMaterialEmissiveColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialEmissiveColor(entity, num_mat,
R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger, R,G,B
as UInteger (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the emissive color of the material</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665732"></a><a name="_Toc297808224"></a><a
name="_Toc297206112"></a><a name="_Toc293666127"></a><span lang=RO>nSetMaterialShininess</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialShininess(entity, num_mat,
shininess)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger,
shininess as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the shininess of the material</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665733"></a><a name="_Toc297808225"></a><a
name="_Toc297206113"></a><a name="_Toc293666128"></a><span lang=RO>nSetMaterialAlpha</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialAlpha(entity, num_mat, level)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger, level
as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the alpha level of transparency for the
material mat_num</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665734"></a><a name="_Toc297808226"></a><a
name="_Toc297206114"></a><a name="_Toc293666129"></a><span lang=RO>nSetMaterialTextureUV</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialTextureUV(entity, num_mat,
layer, u,v)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, mat_num as UInteger, layer
as UInteger, u,v as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the u,v coordinate of the texture </span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665735"></a><a name="_Toc297808227"></a><a
name="_Toc297206115"></a><a name="_Toc293666130"></a><span lang=RO>nSetMaterialTextureAngle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialTextureAngle(entity, num_mat,
layer, angle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger, layer
as UInteger, angle as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the angle of the texture</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665736"></a><a name="_Toc297808228"></a><a
name="_Toc297206116"></a><a name="_Toc293666131"></a><span lang=RO>nSetMaterialTextureScale</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMaterialTextureScale(entity, num_mat,
layer, sx,sy)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity, num_mat as UInteger, layer
as UInteger, sx,sy as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>scale the texture</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665737"></a><a name="_Toc297808229"></a><a
name="_Toc297206117"></a><a name="_Toc293666132"></a><span lang=RO>nGetMaterialCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetMaterialCount(entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>gets the total number of materials of the
entity, returns a value as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665738"></a><a name="_Toc297808230"></a><a
name="_Toc297206118"></a><a name="_Toc293666133"></a><span lang=RO>18.2.For
Bodies</span></h1>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665739"></a><a name="_Toc297808231"></a><a
name="_Toc297206119"></a><a name="_Toc293666134"></a><span lang=RO>nCreateBodyMaterial</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyMaterial()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a material for bodies, returns a
pointer as nMaterial</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665740"></a><a name="_Toc297808232"></a><a
name="_Toc297206120"></a><a name="_Toc293666135"></a><span lang=RO>nSetBodyMaterial</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyMaterial(body, material)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, material as nMaterial</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>binds a body with material</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665741"></a><a name="_Toc297808233"></a><a
name="_Toc297206121"></a><a name="_Toc293666136"></a><span lang=RO>nSetBodyMaterialElasticity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyMaterialElasticity(material1,
material2, elasticity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>material1, material2 as nMaterial, elasticity
as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the elasticity between 2 materials</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665742"></a><a name="_Toc297808234"></a><a
name="_Toc297206122"></a><a name="_Toc293666137"></a><span lang=RO>nSetBodyMaterialFriction</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyMaterialFriction(material1,
material2, friction)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>material1, material2 as nMaterial, friction as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the friction between 2 materials</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665743"></a><a name="_Toc297808235"></a><a
name="_Toc297206123"></a><a name="_Toc293666138"></a><span lang=RO>nSetBodyMaterialSoftness</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyMaterialSoftness(material1,
material2, softness)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>material1, material2 as nMaterial, softness as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the softness between 2 materials</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665744"></a><a name="_Toc297808236"></a><a
name="_Toc297206124"></a><a name="_Toc293666139"></a><span lang=RO>nSetBodyMaterialCollidable</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyMaterialCollidable(material1, material2,
mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>material1, material2 as nMaterial, mode as
Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set on(1) or off(0) if 2 materials are
collidable</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665745"></a><a name="_Toc297808237"></a><a
name="_Toc297206125"></a><a name="_Toc293666140"></a><span lang=RO>19.Maths</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665746"></a><a name="_Toc297808238"></a><a
name="_Toc297206126"></a><a name="_Toc293666141"></a><span lang=RO>nGetWrapValue</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetWrapValue(newvalue, oldvalue,
increment)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>newvalue, oldvalue, increment as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns a calculated wrap value as Single,
used with angles greater than 360</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665747"></a><a name="_Toc297808239"></a><a
name="_Toc297206127"></a><a name="_Toc293666142"></a><span lang=RO>nGetCurveValue</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCurveValue(newvalue, oldvalue, nrsteps)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>newvalue, oldvalue, nrsteps as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns an interpolated value as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665748"></a><a name="_Toc297808240"></a><a
name="_Toc297206128"></a><a name="_Toc293666143"></a><span lang=RO>nGetDistance2D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetDistance2D(x1, y1, x2, y2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,x2,y2 as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the distance between 2 points in 2D as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665749"></a><a name="_Toc297808241"></a><a
name="_Toc297206129"></a><a name="_Toc293666144"></a><span lang=RO>nGetDistance3D</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetDistance3D(x1, y1, z1, x2, y2, z2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x1,y1,z1,x2,y2,z2 as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the distance between 2 points in 3D as
Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665750"></a><a name="_Toc297808242"></a><a
name="_Toc297206130"></a><a name="_Toc293666145"></a><span lang=RO>nGetMin</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetMin(value1, value2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>value1, value2 as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the min value as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665751"></a><a name="_Toc297808243"></a><a
name="_Toc297206131"></a><a name="_Toc293666146"></a><span lang=RO>nGetMax</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetMax(value1, value2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>value1, value2 as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the max value as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665752"></a><a name="_Toc297808244"></a><a
name="_Toc297206132"></a><a name="_Toc293666147"></a><span lang=RO>nGetRand</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetRand(value1, value2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>value1, value2 as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns a random value between value1 and
value2 as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665753"></a><a name="_Toc297808245"></a><a
name="_Toc297206133"></a><a name="_Toc293666148"></a><span lang=RO>20.Mesh</span></h1>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665754"></a><a name="_Toc297808246"></a><a
name="_Toc297206134"></a><a name="_Toc293666149"></a><span lang=RO>nCreateMeshNull</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshNull()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a meshnull, returns a pointer as nMesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665755"></a><a name="_Toc297808247"></a><a
name="_Toc297206135"></a><a name="_Toc293666150"></a><span lang=RO>nCreateMeshCube</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshCube()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a mesh cube, returns a pointer as nMesh
</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665756"></a><a name="_Toc297808248"></a><a
name="_Toc297206136"></a><a name="_Toc293666151"></a><span lang=RO>nCreateMeshSphere</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshSphere(polycount)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>polycount as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a mesh sphere, returns a pointer as
nMesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665757"></a><a name="_Toc297808249"></a><a
name="_Toc297206137"></a><a name="_Toc293666152"></a><span lang=RO>nCreateMeshCylinder</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshCylinder(polycount)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>polycount as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a mesh cylinder, returns a pointer as
nMesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665758"></a><a name="_Toc297808250"></a><a
name="_Toc297206138"></a><a name="_Toc293666153"></a><span lang=RO>nCreateMeshCone</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshCone(polycount)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>polycount as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a mesh cone, returns a pointer as nMesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665759"></a><a name="_Toc297808251"></a><a
name="_Toc297206139"></a><a name="_Toc293666154"></a><span lang=RO>nCreateMeshPlane</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshPlane(size, tilecount)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>size as Single, tilecount as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a mesh plane, returns a pointer as
nMesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665760"></a><a name="_Toc297808252"></a><a
name="_Toc297206140"></a><a name="_Toc293666155"></a><span lang=RO>nCreateMeshWater</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshWater(height, speed, lenght)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>height, speed, lenght as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a water node, returns a pointer as
nEntity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665761"></a><a name="_Toc297808253"></a><a
name="_Toc297206141"></a><a name="_Toc293666156"></a><span lang=RO>nLoadMesh</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadMesh(file, toTangents)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as ZString Ptr, toTangents as VERTEX_TYPE</span></p>

<p class=MsoNormal><span lang=RO>VERTEX_TYPE:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
VT_TCOORS = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
VT_TANGENTS = 1</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a mesh as an animated scene node, returns
a pointer as nMesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665762"></a><a name="_Toc297808254"></a><a
name="_Toc297206142"></a><a name="_Toc293666157"></a><span lang=RO>nSetMeshCastShadow</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMeshCastShadow(mesh)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the mesh to cast shadow (before must set
light cast shadow)</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665763"></a><a name="_Toc297808255"></a><a
name="_Toc297206143"></a><a name="_Toc293666158"></a><span lang=RO>nDrawOutlineMesh</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawOutlineMesh(mesh, w, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, w as Single (thickness), R, G,
B&nbsp; as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>if call in main loop, draws outline mesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665764"></a><a name="_Toc297808256"></a><a
name="_Toc297206144"></a><a name="_Toc293666159"></a><span lang=RO>nSetMeshScale</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMeshScale(mesh, sx, sy, sz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, sx,sy,sz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>scale the mesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665765"></a><a name="_Toc297808257"></a><a
name="_Toc297206145"></a><a name="_Toc293666160"></a><span lang=RO>nAnimateMesh</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><span lang=RO>nAnimateMesh(mesh, looped, speed, begin, end,
time)</span></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, looped as Integer, speed as
Single, beginframe, endframe as Integer, time as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the animation parameters for a mesh</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665766"></a><a name="_Toc297808258"></a><a
name="_Toc297206146"></a><a name="_Toc293666161"></a><span lang=RO>nGetMeshesCollide</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><span lang=RO>nGetMeshesCollide(mesh1, mesh2)</span></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh1, mesh2 as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if mesh1 and mesh2 collided</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665767"></a><a name="_Toc297808259"></a><a
name="_Toc297206147"></a><a name="_Toc293666162"></a><span lang=RO>nGetVertexCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><span lang=RO>nGetVertexCount(mesh)</span></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the number of the vertices</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665768"></a><a name="_Toc297808260"></a><a
name="_Toc297206148"></a><a name="_Toc293666163"></a><span lang=RO>nGetCurrentFrame</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><span lang=RO>nGetCurrentFrame(mesh)</span></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the current frame as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665769"></a><a name="_Toc297808261"></a><a
name="_Toc297206149"></a><a name="_Toc293666164"></a><span lang=RO>nGetStartFrame</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetStartFrame(mesh)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the start frame as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665770"></a><a name="_Toc297808262"></a><a
name="_Toc297206150"></a><a name="_Toc293666165"></a><span lang=RO>nGetEndFrame</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetEndFrame(mesh)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the end frame as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665771"></a><a name="_Toc297808263"></a><a
name="_Toc297206151"></a><a name="_Toc293666166"></a><span lang=RO>nGetChildrenCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetChildrenCount(mesh)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the children count of the mesh as
UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665772"></a><a name="_Toc297808264"></a><a
name="_Toc297206152"></a><a name="_Toc293666167"></a><span lang=RO>nGetChildByName</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetChildByName(mesh, nameChild)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, nameChild as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns a pointer as nChild</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665773"></a><a name="_Toc297808265"></a><a
name="_Toc297206153"></a><a name="_Toc293666168"></a><span lang=RO>nGetChildByIndex</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetChildByIndex(mesh, indexChild)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, indexChild as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns a pointer as nChild</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665774"></a><a name="_Toc297808266"></a><a
name="_Toc297206154"></a><a name="_Toc293666169"></a><span lang=RO>nGetChildName</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetChildName(child)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>child as nChild</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the name of the child as ZString Ptr</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665775"></a><a name="_Toc297808267"></a><a
name="_Toc297206155"></a><a name="_Toc293666170"></a><span lang=RO>nSetChildMode</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetChildMode(mesh, mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, mode as Integer</span></p>

<p class=MsoNormal><span lang=RO>mode:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
C_NONE = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
C_READ = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
C_CONTROL = 2 </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
C_COUNT = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the child mode</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665776"></a><a name="_Toc297808268"></a><a
name="_Toc297206156"></a><a name="_Toc293666171"></a><span lang=RO>21.Particles</span></h1>

<h2><span lang=RO>&nbsp;</span></h2>

<h1><a name="_Toc293665777"></a><a name="_Toc297808269"></a><a
name="_Toc297206157"></a><a name="_Toc293666172"></a>21.1.Particles</h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665778"></a><a name="_Toc297808270"></a><a
name="_Toc297206158"></a><a name="_Toc293666173"></a><span lang=RO>nCreateParticle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateParticle()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add a particle node to scene, returns a
pointer as nParticle</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665779"></a><a name="_Toc297808271"></a><a
name="_Toc297206159"></a><a name="_Toc293666174"></a><span lang=RO>nSetParticleEndSize</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetParticleEndSize(particle, sx,sy)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>particle as nParticle, sx,sy as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the end size of the particle</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665780"></a><a name="_Toc297808272"></a><a
name="_Toc297206160"></a><a name="_Toc293666175"></a><span lang=RO>nSetParticleGravity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetParticleGravity(particle, gx,gy,gz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>particle as nParticle, gx,gy,gz as Single, the
gravity on x,y,z directions</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the gravity of the particles</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665781"></a><a name="_Toc297808273"></a><a
name="_Toc297206161"></a><a name="_Toc293666176"></a><span lang=RO>21.2.Global
emitter functions</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665782"></a><a name="_Toc297808274"></a><a
name="_Toc297206162"></a><a name="_Toc293666177"></a><span lang=RO>nSetEmitterDirection</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEmitterDirection(emitter, dx,dy,dz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, dx,dy,dz as single, the
direction</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the direction of the emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665783"></a><a name="_Toc297808275"></a><a
name="_Toc297206163"></a><a name="_Toc293666178"></a><span lang=RO>nSetEmitterPPS</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEmitterPPS(emitter, minpps, maxpps)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, minpps, maxpps as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the min and the max particles per second</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665784"></a><a name="_Toc297808276"></a><a
name="_Toc297206164"></a><a name="_Toc293666179"></a><span lang=RO>nSetEmitterStartColor</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEmitterStartColor(emitter, minR, minG,
minB, maxR, maxG, maxB)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, minR, minG, minB, maxR, maxG,
maxB as Integer (0-255)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the min and the max R,G,B color</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665785"></a><a name="_Toc297808277"></a><a
name="_Toc297206165"></a><a name="_Toc293666180"></a><span lang=RO>nSetEmitterStartSize</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetEmitterStartSize(emitter, minx, miny,
maxx, maxy)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, minx,miny,maxx,maxy as
Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the min and the max start size</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665786"></a><a name="_Toc297808278"></a><a
name="_Toc297206166"></a><a name="_Toc293666181"></a><span lang=RO>21.3.Box
Emitter</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665787"></a><a name="_Toc297808279"></a><a
name="_Toc297206167"></a><a name="_Toc293666182"></a><span lang=RO>nCreateBoxEmitter</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBoxEmitter(particle, minv, maxv)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>particle as nParticle, minv,maxv as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a box emitter associated with particle,
returns a pointer as nEmitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665788"></a><a name="_Toc297808280"></a><a
name="_Toc297206168"></a><a name="_Toc293666183"></a><span lang=RO>nSetBoxEmitterSize</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBoxEmitterSize(emitter, sx,sy,sz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, sx,sy,sz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the emitter size</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665789"></a><a name="_Toc297808281"></a><a
name="_Toc297206169"></a><a name="_Toc293666184"></a><span lang=RO>21.4.Cylinder
Emitter</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665790"></a><a name="_Toc297808282"></a><a
name="_Toc297206170"></a><a name="_Toc293666185"></a><span lang=RO>nCreateCylinderEmitter</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateCylinderEmitter(particle, minv,
maxv)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>particle as nParticle, minv, maxv as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a cylinder emitter associated with
particle, returns a pointer as nEmitter</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665791"></a><a name="_Toc297808283"></a><a
name="_Toc297206171"></a><a name="_Toc293666186"></a><span lang=RO>nSetCylinderEmitterCenter</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCylinderEmitterCenter(emitter, x,y,z)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, x,y,z as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the center of the cylinder emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665792"></a><a name="_Toc297808284"></a><a
name="_Toc297206172"></a><a name="_Toc293666187"></a><span lang=RO>nSetCylinderEmitterRadius</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCylinderEmitterRadius(emitter, radius)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, radius as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the radius of the cylinder emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665793"></a><a name="_Toc297808285"></a><a
name="_Toc297206173"></a><a name="_Toc293666188"></a><span lang=RO>nSetCylinderEmitterLength</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCylinderEmitterLength(emitter, length)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, length as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the length of the cylinder emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665794"></a><a name="_Toc297808286"></a><a
name="_Toc297206174"></a><a name="_Toc293666189"></a><span lang=RO>21.5.Mesh
Emitter</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665795"></a><a name="_Toc297808287"></a><a
name="_Toc297206175"></a><a name="_Toc293666190"></a><span lang=RO>nCreateMeshEmitter</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateMeshEmitter(particle, minv, maxv)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>particle as nParticle, minv, maxv as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a mesh emitter associated with
particle, returns a pointer as nEmitter</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665796"></a><a name="_Toc297808288"></a><a
name="_Toc297206176"></a><a name="_Toc293666191"></a><span lang=RO>nSetMeshEmitterMesh</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMeshEmitterMesh(emitter, mesh)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, mesh as nMesh</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>bind the emitter with a mesh</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665797"></a><a name="_Toc297808289"></a><a
name="_Toc297206177"></a><a name="_Toc293666192"></a><span lang=RO>nSetMeshEmitterEveryVertex</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMeshEmitterEveryVertex(emitter,
EveryMeshVertex)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, EveryMeshVertex as
Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set on (1) or off (0) the flag <b>EveryMeshVertex
</b>of the emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665798"></a><a name="_Toc297808290"></a><a
name="_Toc297206178"></a><a name="_Toc293666193"></a><span lang=RO>21.6.Ring
Emitter</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665799"></a><a name="_Toc297808291"></a><a
name="_Toc297206179"></a><a name="_Toc293666194"></a><span lang=RO>nCreateRingEmitter</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateRingEmitter(particle, minv, maxv)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>particle as nParticle, minv, maxv as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a ring emitter, returns a pointer as
nEmitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665800"></a><a name="_Toc297808292"></a><a
name="_Toc297206180"></a><a name="_Toc293666195"></a><span lang=RO>nSetRingEmitterCenter</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetRingEmitterCenter(emitter, x,y,z)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, x,y,z as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the center of the ring emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h2><a name="_Toc293665801"></a><a name="_Toc297808293"></a><a
name="_Toc297206181"></a><a name="_Toc293666196"></a><span lang=RO>nSetRingEmitterRadius</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetRingEmitterRadius(emitter, radius)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, radius as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the radius of the ring emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665802"></a><a name="_Toc297808294"></a><a
name="_Toc297206182"></a><a name="_Toc293666197"></a><span lang=RO>nSetRingEmitterThickness</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetRingEmitterThickness(emitter,
thickness)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>emitter as nEmitter, thickness as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the thickness of the ring emitter</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665803"></a><a name="_Toc297808295"></a><a
name="_Toc297206183"></a><a name="_Toc293666198"></a><span lang=RO>22.Physics</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665804"></a><a name="_Toc297808296"></a><a
name="_Toc297206184"></a><a name="_Toc293666199"></a><span lang=RO>22.1.World</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665805"></a><a name="_Toc297808297"></a><a
name="_Toc297206185"></a><a name="_Toc293666200"></a><span lang=RO>nSetPhysicQuality</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetPhysicQuality(mode)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mode as PHYSIC_QUALITY</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>PHYSIC_QUALITY:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Q_LINEAR = 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Q_ADAPTATIVE = 1 </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Q_EXACT = 2</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the physic quality</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665806"></a><a name="_Toc297808298"></a><a
name="_Toc297206186"></a><a name="_Toc293666201"></a><span lang=RO>nSetWorldGravity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetWorldGravity(gx, gy, gz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>gx,gy,gz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the world gravity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665807"></a><a name="_Toc297808299"></a><a
name="_Toc297206187"></a><a name="_Toc293666202"></a><span lang=RO>nSetWorldSize</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetWorldSize(sx,sy,sz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the world size</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665808"></a><a name="_Toc297808300"></a><a
name="_Toc297206188"></a><a name="_Toc293666203"></a><span lang=RO>nWorldMousePick</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nWorldMousePick(mousex,mousey,mouseLeftKey1)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><b><span lang=RO>mousex,mousey,mouseLeftKey1 as Integer</span></b><span
lang=RO> </span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>pick an entity with left click mouse at x,y
mouse position</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665809"></a><a name="_Toc297808301"></a><a
name="_Toc297206189"></a><a name="_Toc293666204"></a><span lang=RO>22.2.Body</span></h1>

<h2><a name="_Toc293665810"></a><a name="_Toc297808302"></a><a
name="_Toc297206190"></a><a name="_Toc293666205"></a><span lang=RO>nCreateBodyNull</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyNull()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns a pointer as nBody</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665811"></a><a name="_Toc297808303"></a><a
name="_Toc297206191"></a><a name="_Toc293666206"></a><span lang=RO>nCreateBodyCube</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyCube(sx,sy,sz, mass)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz,mass as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a body cube with sx,sy,sz dimensions
and a mass, returns a pointer as nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665812"></a><a name="_Toc297808304"></a><a
name="_Toc297206192"></a><a name="_Toc293666207"></a><span lang=RO>nCreateBodySphere</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodySphere(sx,sy,sz,mass)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz,mass as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create an elipsoid body with sx,sy,sz radius
and a mass, returns a pointer as nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665813"></a><a name="_Toc297808305"></a><a
name="_Toc297206193"></a><a name="_Toc293666208"></a><span lang=RO>nCreateBodyCylinder</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyCylinder(radius, height, mass,
offset)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>radius, height, mass as Single, offset as
Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a sphere body, returns a pointer as
nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665814"></a><a name="_Toc297808306"></a><a
name="_Toc297206194"></a><a name="_Toc293666209"></a><span lang=RO>nCreateBodyCone</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyCone(radius, height, mass,
offset)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>radius, height, mass as Single, offset as
Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a cone body , returns a pointer as
nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665815"></a><a name="_Toc297808307"></a><a
name="_Toc297206195"></a><a name="_Toc293666210"></a><span lang=RO>nCreateBodyCapsule</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyCapsule(radius, height, mass,
offset)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>radius, height, mass as Single, offset as
Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a capsule body, returns a pointer as
nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665816"></a><a name="_Toc297808308"></a><a
name="_Toc297206196"></a><a name="_Toc293666211"></a><span lang=RO>nCreateBodyHull</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyHull(mesh, mass)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh, mass as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create o body around the mesh, returns a
pointer as nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665817"></a><a name="_Toc297808309"></a><a
name="_Toc297206197"></a><a name="_Toc293666212"></a><span lang=RO>nCreateBodyTree</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyTree(mesh, mass)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>mesh as nMesh ( a complex mesh), mass as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a body tree for a complex mesh, returns
a pointer as nBody</span></p>

<p class=MsoNormal><span lang=RO>if mass = 0, then the body will be static</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665818"></a><a name="_Toc297808310"></a><a
name="_Toc297206198"></a><a name="_Toc293666213"></a><span lang=RO>nCreateBodyTreeBSP</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyTreeBSP(meshBSP, nodeMSP)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>meshBSP as UInteger Ptr, nodeBSP as UInteger
Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a body tree for a BSP level, returns a
pointer as nBody</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665819"></a><a name="_Toc297808311"></a><a
name="_Toc297206199"></a><a name="_Toc293666214"></a><span lang=RO>nCreateBodyTerrain</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyTerrain(terrain, LOD)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain, LOD as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a body terrain, returns a pointer as
nBody</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665820"></a><a name="_Toc297808312"></a><a
name="_Toc297206200"></a><a name="_Toc293666215"></a><span lang=RO>nCreateBodyWater</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateBodyWater(sx,sy,sz, density,
linviscozity, angviscozity) </span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sx,sy,sz,density,linviscozity,angviscozity as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a body water, returns a pointer as
nBody</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665821"></a><a name="_Toc297808313"></a><a
name="_Toc297206201"></a><a name="_Toc293666216"></a><span lang=RO>nSetAngularVelocity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetAngularVelocity(body, vx, vy, vz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, vx,vy,vz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the angular velocity of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665822"></a><a name="_Toc297808314"></a><a
name="_Toc297206202"></a><a name="_Toc293666217"></a><span lang=RO>nLinearVelocity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLinearVelocity(body, vx, vy, vz)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, vx,vy,vz as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the linear velocity of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665823"></a><a name="_Toc297808315"></a><a
name="_Toc297206203"></a><a name="_Toc293666218"></a><span lang=RO>nSetLinearVelocity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLinearVelocity(body,
xpos,ypos,zpos,xtarget,ytarget,ztarget,speed)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody,
xpos,ypos,zpos,xtarget,ytarget,ztarget,speed as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the linear velocity of the body toward a
target</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665824"></a><a name="_Toc297808316"></a><a
name="_Toc297206204"></a><a name="_Toc293666219"></a><span lang=RO>nSetLinearDamping</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetLinearDamping(body, lindamping)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, lindamping as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the linear damping of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665825"></a><a name="_Toc297808317"></a><a
name="_Toc297206205"></a><a name="_Toc293666220"></a><span lang=RO>nSetAngularDamping</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetAngularDamping(body, ax,ay,az)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, ax,ay,az as Single </span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the angular damping of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665826"></a><a name="_Toc297808318"></a><a
name="_Toc297206206"></a><a name="_Toc293666221"></a><span lang=RO>nAddImpulse</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAddImpulse(body, px,py,pz,x,y,z)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>px,py,pz as Single(impulse), x,y,z as Single (point
of the body)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add impulse at a specific point in the body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665827"></a><a name="_Toc297808319"></a><a
name="_Toc297206207"></a><a name="_Toc293666222"></a><span lang=RO>nGetBodiesCollide</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodiesCollide(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if success</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665828"></a><a name="_Toc297808320"></a><a
name="_Toc297206208"></a><a name="_Toc293666223"></a><span lang=RO>nGetBodyCollX</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCollX(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>r</span><span lang=EN>eturn<b> </b>exact
X-coordinate of the collision of the body with another body, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665829"></a><a name="_Toc297808321"></a><a
name="_Toc297206209"></a><a name="_Toc293666224"></a><span lang=RO>nGetBodyCollY</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCollY(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>r</span><span lang=EN>eturn<b> </b>exact
Y-coordinate of the collision of the body with another body, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665830"></a><a name="_Toc297808322"></a><a
name="_Toc297206210"></a><a name="_Toc293666225"></a><span lang=RO>nGetBodyCollZ</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCollZ(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>r</span><span lang=EN>eturn<b> </b>exact
Z-coordinate of the collision of the body with another body, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665831"></a><a name="_Toc297808323"></a><a
name="_Toc297206211"></a><a name="_Toc293666226"></a><span lang=RO>nGetBodyCollNX</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCollNX(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>r</span><span lang=EN>eturn<b> </b>exact
X-angle of the collision of the body with another body, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665832"></a><a name="_Toc297808324"></a><a
name="_Toc297206212"></a><a name="_Toc293666227"></a><span lang=RO>nGetBodyCollNY</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCollNY(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>r</span><span lang=EN>eturn<b> </b>exact Y
–angle of the collision of the body with another body, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665833"></a><a name="_Toc297808325"></a><a
name="_Toc297206213"></a><a name="_Toc293666228"></a><span lang=RO>nGetBodyCollNZ</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetBodyCollNZ(body1, body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>r</span><span lang=EN>eturn<b> </b>exact Z
–angle of the collision of the body with another body, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665834"></a><a name="_Toc297808326"></a><a
name="_Toc297206214"></a><a name="_Toc293666229"></a><span lang=RO>nDrawBody</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawBody(body)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>make visible the edges of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665835"></a><a name="_Toc297808327"></a><a
name="_Toc297206215"></a><a name="_Toc293666230"></a><span lang=RO>nSetBodyCenterOfMass</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyCenterOfMass(body, x,y,z)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, x,y,z as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the center of mass of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665836"></a><a name="_Toc297808328"></a><a
name="_Toc297206216"></a><a name="_Toc293666231"></a><span lang=RO>nRemoveBody</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nRemoveBody(body)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>remove a body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665837"></a><a name="_Toc297808329"></a><a
name="_Toc297206217"></a><a name="_Toc293666232"></a><span lang=RO>nSetBodyMass</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBodyMass(body, mass)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>body as nBody, mass as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set a new mass of the body</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665838"></a><a name="_Toc297808330"></a><a
name="_Toc297206218"></a><a name="_Toc293666233"></a><span lang=RO>22.3.Joints</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665839"></a><a name="_Toc297808331"></a><a
name="_Toc297206219"></a><a name="_Toc293666234"></a><span lang=RO>nCreateJointBall</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointBall(px,py,pz,vx,vy,vz,body1,
body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>px,py,pz as Single (position), vx,vy,vz as
Single (around x,y or z direction, only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointball, returns a pointer as
nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665840"></a><a name="_Toc297808332"></a><a
name="_Toc297206220"></a><a name="_Toc293666235"></a><span lang=RO>nCreateJointHinge</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointHinge(px,py,pz,vx,vy,vz,body1,body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>px,py,pz as Single (position), vx,vy,vz as
Single (around x,y or z direction, only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointhinge, return a pointer as
nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665841"></a><a name="_Toc297808333"></a><a
name="_Toc297206221"></a><a name="_Toc293666236"></a><span lang=RO>nCreateJointSlider</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointSlider(px,py,pz,vx,vy,vz,body1,body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>px,py,pz as Single (position), vx,vy,vz as
Single (around x,y or z direction, only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointslider, return a pointer as
nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665842"></a><a name="_Toc297808334"></a><a
name="_Toc297206222"></a><a name="_Toc293666237"></a><span lang=RO>nCreateJointUpVector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointUpVector(px,py,pz,body)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>px,py,pz as Single (position)</span></p>

<p class=MsoNormal><span lang=RO>body as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointupvector, return a pointer as
nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665843"></a><a name="_Toc297808335"></a><a
name="_Toc297206223"></a><a name="_Toc293666238"></a><span lang=RO>nCreateJointCorkscrew</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointCorkscrew(px,py,pz,vx,vy,vz,body1,body2)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>px,py,pz as Single (position), vx,vy,vz as
Single (around x,y or z direction, only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>body1, body2 as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointcorkscrew, return a pointer as
nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665844"></a><a name="_Toc297808336"></a><a
name="_Toc297206224"></a><a name="_Toc293666239"></a><span lang=RO>nCreateJointGear</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointGear(gearRatio, childx, childy,
childz, parentx, parenty, parentz, bodychild, bodyparent)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>gearRatio as Single </span></p>

<p class=MsoNormal><span lang=RO>childx, childy, childz as Single – child
rotation axe (only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>parentx, parenty, parentz as Single – parent
rotation axe (only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>bodychild, bodyparent as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointgear, return a pointer as nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665845"></a><a name="_Toc297808337"></a><a
name="_Toc297206225"></a><a name="_Toc293666240"></a><span lang=RO>nCreateJointWormGear</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateJointWormGear(gearRatio, rotx, roty,
rotz, lineardx, lineardy, lineardz, rotBody, linearBody)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>gearRatio as Single</span></p>

<p class=MsoNormal><span lang=RO>rotx, roty, rotz as Single – rotation axe
(only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>lineardx,lineardy,lineardz as Single – linear direction
(only one of them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>rotbody, linearbody as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a jointwormgear, return a pointer as
nJoint</span></p>

<h2><a name="_Toc293665846"></a><a name="_Toc297808338"></a><a
name="_Toc297206226"></a><a name="_Toc293666241"></a><span lang=RO>nRemoveJoint</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nRemoveJoint(joint)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>joint as nJoint</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>remove a joint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665847"></a><a name="_Toc297808339"></a><a
name="_Toc297206227"></a><a name="_Toc293666242"></a><span lang=RO>nSetJointCollisionState</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetJointCollisionState(joint, state)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>joint as nJoint</span></p>

<p class=MsoNormal><span lang=RO>state as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the collision state of the joint</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665848"></a><a name="_Toc297808340"></a><a
name="_Toc297206228"></a><a name="_Toc293666243"></a><span lang=RO>nSetBallLimits</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetBallLimits(jointball, maxconeangle,
mintwistangle, maxtwistangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>jointball as nJoint</span></p>

<p class=MsoNormal><span lang=RO>maxconeangle, mintwistangle, maxtwistangle as
Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the jointball limits</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665849"></a><a name="_Toc297808341"></a><a
name="_Toc297206229"></a><a name="_Toc293666244"></a><span lang=RO>nSetHingeLimits</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetHingeLimits(jointhinge, minangle,
maxangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>jointhinge as nJoint</span></p>

<p class=MsoNormal><span lang=RO>minangle, maxangle as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the jointhinge limits</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665850"></a><a name="_Toc297808342"></a><a
name="_Toc297206230"></a><a name="_Toc293666245"></a><span lang=RO>nSetSliderLimits</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetSliderLimits(jointslider, minDist,
maxDist)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>jointslider as nJoint</span></p>

<p class=MsoNormal><span lang=RO>minDist, maxDist as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the jointslider limits</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h2><a name="_Toc293665851"></a><a name="_Toc297808343"></a><a
name="_Toc297206231"></a><a name="_Toc293666246"></a><span lang=RO>nSetCorkScrewLinearLimits</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCorkScrewLinearLimits(joint, minDist,
maxDist)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>joint as nJoint</span></p>

<p class=MsoNormal><span lang=RO>minDist, maxDist as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the jointcorkscrew linear limits</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665852"></a><a name="_Toc297808344"></a><a
name="_Toc297206232"></a><a name="_Toc293666247"></a><span lang=RO>nSetCorkScrewAngularLimits</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCorkScrewAngularLimits(joint, minangle,
maxangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>joint as nJoint</span></p>

<p class=MsoNormal><span lang=RO>minangle, maxangle as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the jointcorkscrew angular limits</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665853"></a><a name="_Toc297808345"></a><a
name="_Toc297206233"></a><a name="_Toc293666248"></a><span lang=RO>22.4.Vehicle</span></h1>

<h2><a name="_Toc293665854"></a><a name="_Toc297808346"></a><a
name="_Toc297206234"></a><a name="_Toc293666249"></a><span lang=RO>nCreateVehicle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateVehicle(dx,dy,dz, body)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>dx,dy,dz as Single – orientation (only one of
them must be 1, else 0)</span></p>

<p class=MsoNormal><span lang=RO>body as nBody</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a vehicle, return a pointer as nJoint</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h2><a name="_Toc293665855"></a><a name="_Toc297808347"></a><a
name="_Toc297206235"></a><a name="_Toc293666250"></a><span lang=RO>nGetVehicleSpeed</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetVehicleSpeed(vehicle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>vehicle as nJoint</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the vehicle speed as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665856"></a><a name="_Toc297808348"></a><a
name="_Toc297206236"></a><a name="_Toc293666251"></a><span lang=RO>nAddTireVehicle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAddTireVehicle(vehicle, meshtire, x, y, z,
mass, radius, width, friction, slenght, sspring, sdamper)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>vehicle as nJoint, meshtire as nMesh,</span></p>

<p class=MsoNormal><span lang=RO>x,y,z as Single – position</span></p>

<p class=MsoNormal><span lang=RO>mass, radius, width, friction, slenghtm
sspring, sdamper as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>add tires to the vehicle</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<h2><a name="_Toc293665857"></a><a name="_Toc297808349"></a><a
name="_Toc297206237"></a><a name="_Toc293666252"></a><span lang=RO>nApplyBrakeVehicle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nApplyBrakeVehicle(vehicle, wheel_index,
brake_power)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>vehicle as nJoint</span></p>

<p class=MsoNormal><span lang=RO>wheel_index as Integer (0 ,1 – front, 2,3 –
back)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>apply brake to the vehicle</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665858"></a><a name="_Toc297808350"></a><a
name="_Toc297206238"></a><a name="_Toc293666253"></a><span lang=RO>nApplySteeringVehicle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nApplySteeringVehicle(vehicle, wheel_index,
rate)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>vehicle as nJoint</span></p>

<p class=MsoNormal><span lang=RO>wheel_index as Integer</span></p>

<p class=MsoNormal><span lang=RO>rate as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>apply steering</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665859"></a><a name="_Toc297808351"></a><a
name="_Toc297206239"></a><a name="_Toc293666254"></a><span lang=RO>nApplySteeringJoystickVehicle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nApplySteeringJoystickVehicle(vehicle,
wheel_index, rate, maxsteerangle)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>vehicle as nJoint</span></p>

<p class=MsoNormal><span lang=RO>wheel_index as Integer</span></p>

<p class=MsoNormal><span lang=RO>rate as Single</span></p>

<p class=MsoNormal><span lang=RO>maxsteerangle as Single (at 1 value result a
maxsterangle = 30)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>apply a variable steering</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665860"></a><a name="_Toc297808352"></a><a
name="_Toc297206240"></a><a name="_Toc293666255"></a><span lang=RO>nApplyTorqueVehicle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nApplyTorqueVehicle(vehicle, wheel_index,
torque)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>vehicle as nJoint</span></p>

<p class=MsoNormal><span lang=RO>wheel_index as Integer</span></p>

<p class=MsoNormal><span lang=RO>torque as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>apply torque</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665861"></a><a name="_Toc297808353"></a><a
name="_Toc297206241"></a><a name="_Toc293666256"></a><span lang=RO>23.Shaders</span></h1>

<h2><a name="_Toc293665862"></a><a name="_Toc297808354"></a><a
name="_Toc297206242"></a><a name="_Toc293666257"></a><span lang=RO>nLoadShader</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadShader(VertexFileName, PixelFileName,
selector)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>VertexFileName as ZString Ptr, PixelFileName
as ZString Ptr, selector as Integer</span></p>

<p class=MsoNormal><span lang=RO>selector:</span></p>

<p class=MsoNormal><span lang=RO>GLSL1.1 = 0</span></p>

<p class=MsoNormal><span lang=RO>HLSL 2.0 = 1</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a shader manager, returns a pointer as
nShader</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665863"></a><a name="_Toc297808355"></a><a
name="_Toc297206243"></a><a name="_Toc293666258"></a><span lang=RO>nApplyShadersEntity</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nApplyShadersEntity(shader, entity)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>shader as nShader, entity as nEntity</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>apply shader to entity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665864"></a><a name="_Toc297808356"></a><a
name="_Toc297206244"></a><a name="_Toc293666259"></a><span lang=RO>nApplyShadersMaterial</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nApplyShadersMaterial(shader, entity,
mat_num)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>shader as nShader, entity as nEntity, mat_num
as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>apply shader to one material of the entity</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665865"></a><a name="_Toc297808357"></a><a
name="_Toc297206245"></a><a name="_Toc293666260"></a><span lang=RO>nSetVertexShaderConstant</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetVertexShaderConstant(shader, namevar,
cdata, count)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>shader as nShader, namevar as ZString Ptr,
cdata as Single, count as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the vertex shader constant</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665866"></a><a name="_Toc297808358"></a><a
name="_Toc297206246"></a><a name="_Toc293666261"></a><span lang=RO>nSetPixelShaderConstant</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetPixelShaderConstant(shader, namevar,
cdata, count)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>shader as nShader, namevar as ZString Ptr,
cdata as Single, count as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the pixel shader constant</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665867"></a><a name="_Toc297808359"></a><a
name="_Toc297206247"></a><a name="_Toc293666262"></a><span lang=RO>nSetMatrixToVertexShaderConstant</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetMatrixToVertexShaderConstant(shader,
matrixtype)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>shader as nShader, matrixtype as Integer</span></p>

<p class=MsoNormal><span lang=RO>matrixtype in HLSL shaders:</span></p>

<p class=MsoNormal><span lang=RO>0 = „matWorldViewProjection”</span></p>

<p class=MsoNormal><span lang=RO>1 = „matWorldView”</span></p>

<p class=MsoNormal><span lang=RO>2 = „matProj”</span></p>

<p class=MsoNormal><span lang=RO>3 = „matView”</span></p>

<p class=MsoNormal><span lang=RO>4 = „matWorld”</span></p>

<p class=MsoNormal><span lang=RO>5 = „matInvWorld”</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>passes matrix to vertex shader constant in
HLSL</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665868"></a><a name="_Toc297808360"></a><a
name="_Toc297206248"></a><a name="_Toc293666263"></a><span lang=RO>24.Sky</span></h1>

<h2><a name="_Toc293665869"></a><a name="_Toc297808361"></a><a
name="_Toc297206249"></a><a name="_Toc293666264"></a><span lang=RO>nCreateSkyDome</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateSkyDome(texture, radius)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture, radius as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a sky dome, returns a pointer as
nEntity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665870"></a><a name="_Toc297808362"></a><a
name="_Toc297206250"></a><a name="_Toc293666265"></a><span lang=RO>nCreateSkyBox</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateSkyBox(top, bottom, left, right,
front, back)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>top, bottom, left, right, front, back as
nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a sky box from 6 textures, returns a
pointer as nEntity</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665871"></a><a name="_Toc297808363"></a><a
name="_Toc297206251"></a><a name="_Toc293666266"></a><span lang=RO>25.Sound</span></h1>

<h2><a name="_Toc293665872"></a><a name="_Toc297808364"></a><a
name="_Toc297206252"></a><a name="_Toc293666267"></a><span lang=RO>nLoadSound</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadSound(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a sound from file, returns a pointer as
nSound</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>&nbsp;</span></b></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665873"></a><a name="_Toc297808365"></a><a
name="_Toc297206253"></a><a name="_Toc293666268"></a><span lang=RO>nSetSoundType</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetSoundType(sound, sound_type)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound, sound_type as Integer</span></p>

<p class=MsoNormal><span lang=RO>sound_type:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2D sound = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3D sound = 2</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the sound type</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665874"></a><a name="_Toc297808366"></a><a
name="_Toc297206254"></a><a name="_Toc293666269"></a><span lang=RO>nSetSoundVolume</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetSoundVolume(sound, volume)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound, volume as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the sound volume</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665875"></a><a name="_Toc297808367"></a><a
name="_Toc297206255"></a><a name="_Toc293666270"></a><span lang=RO>nSetSoundPitch</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetSoundPitch(sound, pitch)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound, pitch as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the sound pitch</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665876"></a><a name="_Toc297808368"></a><a
name="_Toc297206256"></a><a name="_Toc293666271"></a><span lang=RO>nPlaySound</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPlaySound(sound)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>play the sound</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665877"></a><a name="_Toc297808369"></a><a
name="_Toc297206257"></a><a name="_Toc293666272"></a><span lang=RO>nStopSound</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nStopSound(sound)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>stop the sound</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665878"></a><a name="_Toc297808370"></a><a
name="_Toc297206258"></a><a name="_Toc293666273"></a><span lang=RO>nPauseSound</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPauseSound(sound)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>pause the sound</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665879"></a><a name="_Toc297808371"></a><a
name="_Toc297206259"></a><a name="_Toc293666274"></a><span lang=RO>nLoopSound</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoopSound(sound)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>loop the sound</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297808372"><span lang=RO>nSetSoundPosition</span></a></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetSoundPosition(sound,
x, y, z)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>sound as nSound;
x, y, z as Single;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>description:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the sound 3D
position;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665880"></a><a name="_Toc297808373"></a><a
name="_Toc297206260"></a><a name="_Toc293666275"></a><span lang=RO>nSetSoundReferenceDistance</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetSoundReferenceDistance(sound, distance)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound, distance as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>determines the distance at wich the sound
affects the listener</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665881"></a><a name="_Toc297808374"></a><a
name="_Toc297206261"></a><a name="_Toc293666276"></a><span lang=RO>nSetSoundRollOff</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetSoundRollOff(sound, value)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>sound as nSound, value as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>determines the rate of progression in wich the
sound affects the listener</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297808375"><span lang=RO>nSetListenerPosition</span></a></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetListenerPosition(x,y,z)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,z as Single;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>description:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the listener
position in 3D sound enviroment;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665882"></a><a name="_Toc297808376"></a><a
name="_Toc297206262"></a><a name="_Toc293666277"></a><span lang=RO>26.System</span></h1>

<h2><a name="_Toc293665883"></a><a name="_Toc297808377"></a><a
name="_Toc297206263"></a><a name="_Toc293666278"></a><span lang=RO>nSetAppTitle</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetAppTitle(title)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>title as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the application title in the title bar of
the window</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665884"></a><a name="_Toc297808378"></a><a
name="_Toc297206264"></a><a name="_Toc293666279"></a><span lang=RO>nGetSupportGLSL</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetSupportGLSL()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if support GLSL, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665885"></a><a name="_Toc297808379"></a><a
name="_Toc297206265"></a><a name="_Toc293666280"></a><span lang=RO>nGetSupportHLSL</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetSupportHLSL()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if support HLSL, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665886"></a><a name="_Toc297808380"></a><a
name="_Toc297206266"></a><a name="_Toc293666281"></a><span lang=RO>nGetSupportHardwareTL</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetSupportHardwareTL()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if support hardwareTL, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665887"></a><a name="_Toc297808381"></a><a
name="_Toc297206267"></a><a name="_Toc293666282"></a><span lang=RO>nGetAvailableMemory</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetAvailableMemory()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return available memory as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665888"></a><a name="_Toc297808382"></a><a
name="_Toc297206268"></a><a name="_Toc293666283"></a><span lang=RO>nGetTotalMemory</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTotalMemory()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return total memory as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665889"></a><a name="_Toc297808383"></a><a
name="_Toc297206269"></a><a name="_Toc293666284"></a><span lang=RO>nGetVideoModeCount</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetVideoModeCount()</span></b></p>

<p class=MsoNormal><span lang=RO>escription:</span></p>

<p class=MsoNormal><span lang=RO>return the videomode count as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665890"></a><a name="_Toc297808384"></a><a
name="_Toc297206270"></a><a name="_Toc293666285"></a><span lang=RO>nGetVideoModeDepth</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetVideoModeDepth()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the videomode depth as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665891"></a><a name="_Toc297808385"></a><a
name="_Toc297206271"></a><a name="_Toc293666286"></a><span lang=RO>nGetVideoModeResolutionWidth</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetVideoModeResolutionWidth()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return videomoderesolution width, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665892"></a><a name="_Toc297808386"></a><a
name="_Toc297206272"></a><a name="_Toc293666287"></a><span lang=RO>nGetVideoModeResolutionHeight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetVideoModeResolutionHeight()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return videomoderesolution height, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665893"></a><a name="_Toc297808387"></a><a
name="_Toc297206273"></a><a name="_Toc293666288"></a><span lang=RO>nGetSupportStencilBuffer</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetSupportStencilBuffer()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if support stencilbuffer, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665894"></a><a name="_Toc297808388"></a><a
name="_Toc297206274"></a><a name="_Toc293666289"></a><span lang=RO>nGetSupportMultiTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetSupportMultiTexture()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if support multitexture, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665895"></a><a name="_Toc297808389"></a><a
name="_Toc297206275"></a><a name="_Toc293666290"></a><span lang=RO>nGetSupportARB</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetSupportARB()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if support ARB, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665896"></a><a name="_Toc297808390"></a><a
name="_Toc297206276"></a><a name="_Toc293666291"></a><span lang=RO>nGetProcessorSpeed</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetProcessorSpeed()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the processor speed as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665897"></a><a name="_Toc297808391"></a><a
name="_Toc297206277"></a><a name="_Toc293666292"></a>27.Terrain</h1>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665898"></a><a name="_Toc297808392"></a><a
name="_Toc297206278"></a><a name="_Toc293666293"></a>nLoadTerrain</h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadTerrain(heightmap_file, smooth, LOD,
patchSize)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>hieghtmap as ZString Ptr, smooth as Integer,
LOD as Integer, patchSize as IRR_TERRAIN_PATCH_SIZE</span></p>

<p class=MsoNormal><span lang=RO>IRR_TERRAIN_PATCH_SIZE:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ETPS_9 =
9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
patch size of 9, at most, use 4 levels of detail with this patch size.&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ETPS_17 =
17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
patch size of 17, at most, use 5 levels of detail with this patch size.&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ETPS_33 =
33&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
patch size of 33, at most, use 6 levels of detail with this patch size.&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ETPS_65 =
65&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
patch size of 65, at most, use 7 levels of detail with this patch size.&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ETPS_129
= 129&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; patch
size of 129, at most, use 8 levels of detail with this patch size. </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a terrain loaded from an heightamp_file
image</span></p>

<p class=MsoNormal><span lang=RO>returns a pointer as nTerrain</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665899"></a><a name="_Toc297808393"></a><a
name="_Toc297206279"></a><a name="_Toc293666294"></a><span lang=RO>nSetScaleTerrainTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetScaleTerrainTexture(terrain, sct, sdt)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain, sct, sdt as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>scale color texture, scale detail texture of
the terrain</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665900"></a><a name="_Toc297808394"></a><a
name="_Toc297206280"></a><a name="_Toc293666295"></a><span lang=RO>nGetTerrainHeight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTerrainHeight(terrain, x, z)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain, x,z as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>get the height value (y) of terrain at x,z
coordinates, returns y as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665901"></a><a name="_Toc297808395"></a><a
name="_Toc297206281"></a><a name="_Toc293666296"></a><span lang=RO>28.Texture</span></h1>

<h2><a name="_Toc293665902"></a><a name="_Toc297808396"></a><a
name="_Toc297206282"></a><a name="_Toc293666297"></a><span lang=RO>nLoadTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLoadTexture(filename)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>filename as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load a texture in videomemory, returns a
pointer as nTexture</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665903"></a><a name="_Toc297808397"></a><a
name="_Toc297206283"></a><a name="_Toc293666298"></a><span lang=RO>nCreateRTT</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateRTT(w,h)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>w,h as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a render target texture, returns a
pointer as nTexture</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665904"></a><a name="_Toc297808398"></a><a
name="_Toc297206284"></a><a name="_Toc293666299"></a><span lang=RO>nSetRenderTarget</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetRenderTarget(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the active render target</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665905"></a><a name="_Toc297808399"></a><a
name="_Toc297206285"></a><a name="_Toc293666300"></a><span lang=RO>nSetColorKeyTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetColorKeyTexture(texture, R, G, B)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture, R,G,B as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set a color key for a texture, this color will
be transparent</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665906"></a><a name="_Toc297808400"></a><a
name="_Toc297206286"></a><a name="_Toc293666301"></a><span lang=RO>nFindTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nFindTexture(file)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file as ZString Ptr</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>find a texture by its file name, returns a
pointer as nTexture</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665907"></a><a name="_Toc297808401"></a><a
name="_Toc297206287"></a><a name="_Toc293666302"></a><span lang=RO>nGetTextureWidth</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTextureWidth(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the width of the texture, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665908"></a><a name="_Toc297808402"></a><a
name="_Toc297206288"></a><a name="_Toc293666303"></a><span lang=RO>nGetTextureHeight</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTextureHeight(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>returns the height of the texture, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665909"></a><a name="_Toc297808403"></a><a
name="_Toc297206289"></a><a name="_Toc293666304"></a><span lang=RO>nLockTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nLockTexture(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>locks the texture and returns a pointer to the
1st pixel of the texture</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665910"></a><a name="_Toc297808404"></a><a
name="_Toc297206290"></a><a name="_Toc293666305"></a><span lang=RO>nUnLockTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nUnLockTexture(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>unlocks the texture</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665911"></a><a name="_Toc297808405"></a><a
name="_Toc297206291"></a><a name="_Toc293666306"></a><span lang=RO>nUnLockTextureNoMipMap</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nUnLockTextureNoMipMap(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>unlocks the texture but without regenerating
the mipmap of texture</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665912"></a><a name="_Toc297808406"></a><a
name="_Toc297206292"></a><a name="_Toc293666307"></a><span lang=RO>nCreateTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateTexture(path, w, h, color_format)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>path as ZString Ptr, w,h as Integer,
color_format as IRR_COLOR_FORMAT</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>A color format specifies how color information
is stored:</span></p>

<p class=MsoNormal><b><span lang=RO>ECF_A1R5G5B5</span></b><span lang=RO> =
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16 bit color format used by the software
driver, and thus preferred by all other irrlicht engine video drivers. There
are 5 bits for every color component, and a single bit is left for alpha
information.&nbsp; </span></p>

<p class=MsoNormal><b><span lang=RO>ECF_R5G6B5</span></b><span lang=RO> =
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Standard 16 bit color
format.</span></p>

<p class=MsoNormal><b><span lang=RO>ECF_R8G8B8</span></b><span lang=RO> =
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 24 bit color, no
alpha channel, but 8 bit for red, green and blue. </span></p>

<p class=MsoNormal><b><span lang=RO>ECF_A8R8G8B8</span></b><span lang=RO> =
3&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Default 32 bit color format. 8 bits are used
for every component: red, green, blue and alpha.&nbsp; </span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a blank texture, returns a pointer as
nTexture</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665913"></a><a name="_Toc297808407"></a><a
name="_Toc297206293"></a><a name="_Toc293666308"></a><span lang=RO>nRemoveTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nRemoveTexture(texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>remove a texture freeing its resources</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665914"></a><a name="_Toc297808408"></a><a
name="_Toc297206294"></a><a name="_Toc293666309"></a><span lang=RO>nMakeNormalMapTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nMakeNormalMapTexture(texture, amplitude)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture, amplitude as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a normal map from a grayscale heightmap
texture</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665915"></a><a name="_Toc297808409"></a><a
name="_Toc297206295"></a><a name="_Toc293666310"></a><span lang=RO>nBlendTextures</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nBlendTextures(dest_texture,
source_texture, x_offset, y_offset, operation)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>dest_texture, source_texture as nTexture,
x_offset, y_offset, operation as Integer</span></p>

<p class=MsoNormal><span lang=RO>operation:</span></p>

<p class=MsoNormal><span lang=RO>BLEND_SCREEN &nbsp;= 0</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BLEND_ADD =
1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_SUBTRACT = 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BLEND_MULTIPLY = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BLEND_DIVIDE
= 4</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>blend the source texture into the destination
texture to create a single texture, returns 1 if success</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665916"></a><a name="_Toc297808410"></a><a
name="_Toc297206296"></a><a name="_Toc293666311"></a><span lang=RO>nAlphaBlendTextures</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nAlphaBlendTextures(dest_texture,
source_texture, alpha_texture, alpha_color_channel)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>dest_texture, source_texture, alpha_texture as
nTexture</span></p>

<p class=MsoNormal><span lang=RO>alpha_color_channel as ALPHA_CHANNEL_COLOR</span></p>

<p class=MsoNormal><span lang=RO>ALPHA_CHANNEL_COLOR:</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALPHA_RED = 1</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALPHA_GREEN
= 2</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALPHA_BLUE = 3</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALPHA_ALPHA = 4</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>blend the source texture into the destination
texture using a third alphamap with rgb channels to create a single texture</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if success</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665917"></a><a name="_Toc297808411"></a><a
name="_Toc297206297"></a><a name="_Toc293666312"></a><span lang=RO>nCreateTextureFromImage</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateTextureFromImage(image)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a texture in videomemory from a
RAMimage, returns a pointer as nTexture </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665918"></a><a name="_Toc297808412"></a><a
name="_Toc297206298"></a><a name="_Toc293666313"></a><span lang=RO>nCreateImageFromTexture</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateImageFromTexture(texture, originX,
originY, w, h)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>texture as nTexture, origineX, origineY, w, h
as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create image from texture or part of texture,
returns a pointer as nImage</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665919"></a><a name="_Toc297808413"></a><a
name="_Toc297206299"></a><a name="_Toc293666314"></a><span lang=RO>nPaintTileTextureWithAlpha</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPaintTileTextureWithAlpha(dest_texture,
source_texture, xpos, ypos, radius, alphalevel)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>dest_texture, source_texture as nTexture,
xpos,ypos, radius, alphalevel as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>paint the destination(base) texture with a
source texture using an alpha value at x,y position,</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if success</span></p>

<p class=MsoNormal style='text-autospace:none'><i><span lang=RO>&nbsp;</span></i></p>

<h2><a name="_Toc293665920"></a><a name="_Toc297808414"></a><a
name="_Toc297206300"></a><a name="_Toc293666315"></a><span lang=RO>nPaintTileTextureWithAlpha2</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPaintTileTextureWithAlpha2(dest_texture, source_texture,
xpos, ypos, radius, alphalevel)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>dest_texture, source_texture as nTexture,
xpos,ypos, radius, alphalevel as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>paint the destination(base) texture with a
source texture using an alpha value at x,y position,</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if success</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665921"></a><a name="_Toc297808415"></a><a
name="_Toc297206301"></a><a name="_Toc293666316"></a><span lang=RO>nPaintTileTextureWithAlpha3</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPaintTileTextureWithAlpha3(dest_texture,
source_texture, pixeldeststart, pixelsrcstart, xpos, ypos, radius, alphalevel)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>dest_texture, source_texture as nTexture,
pixeldeststart, pixelsrcstart as UInteger Ptr, </span></p>

<p class=MsoNormal><span lang=RO>xpos,ypos,radius, alphalevel as Integer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>(optimized algorithm)</span></p>

<p class=MsoNormal><span lang=RO>paint the destination(base) texture with a
source texture using an alpha value at x,y position,</span></p>

<p class=MsoNormal><span lang=RO>pixeldeststart and pixelsrcstart found before
calling lock texture</span></p>

<p class=MsoNormal><span lang=RO>returns 1 if success</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc293665922"></a><a name="_Toc297808416"></a><a
name="_Toc297206302"></a><a name="_Toc293666317"></a><span lang=RO>29.Timer</span></h1>

<h2><a name="_Toc293665923"></a><a name="_Toc297808417"></a><a
name="_Toc297206303"></a><a name="_Toc293666318"></a><span lang=RO>nCreateTimer</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateTimer()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a timer, return a pointer as nTimer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665924"></a><a name="_Toc297808418"></a><a
name="_Toc297206304"></a><a name="_Toc293666319"></a><span lang=RO>nTimerStart</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nTimerStart(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>start the timer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665925"></a><a name="_Toc297808419"></a><a
name="_Toc297206305"></a><a name="_Toc293666320"></a><span lang=RO>nTimerStop</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nTimerStop(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>stop the timer (then must call timerstart to
use this &nbsp;timer &nbsp;again)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665926"></a><a name="_Toc297808420"></a><a
name="_Toc297206306"></a><a name="_Toc293666321"></a><span lang=RO>nSetTimerSpeed</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetTimerSpeed(timer, speed)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer, speed as Single</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the timer speed</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665927"></a><a name="_Toc297808421"></a><a
name="_Toc297206307"></a><a name="_Toc293666322"></a><span lang=RO>nGetTimerSpeed</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTimerSpeed(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the timer speed as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665928"></a><a name="_Toc297808422"></a><a
name="_Toc297206308"></a><a name="_Toc293666323"></a><span lang=RO>nSetCurrentTime</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetCurrentTime(timer, timevalue)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer, timevalue as UInteger</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the current timer time</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665929"></a><a name="_Toc297808423"></a><a
name="_Toc297206309"></a><a name="_Toc293666324"></a><span lang=RO>nGetCurrentTimeInMs</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCurrentTimeInMs(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the current time in ms, as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665930"></a><a name="_Toc297808424"></a><a
name="_Toc297206310"></a><a name="_Toc293666325"></a><span lang=RO>nGetCurrentTimeInSeconds</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetCurrentTimeInSeconds(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the current time in seconds, as Single</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665931"></a><a name="_Toc297808425"></a><a
name="_Toc297206311"></a><a name="_Toc293666326"></a><span lang=RO>nGetRealTimeInMs</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetRealTimeInMs(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>get the real time in ms, as UInteger</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665932"></a><a name="_Toc297808426"></a><a
name="_Toc297206312"></a><a name="_Toc293666327"></a><span lang=RO>nGetTimerIsStopped</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTimerIsStopped(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return 1 if timer is stopped, as Integer</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc293665933"></a><a name="_Toc297808427"></a><a
name="_Toc297206313"></a><a name="_Toc293666328"></a><span lang=RO>nTimerTick</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nTimerTick(timer)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>timer as nTimer</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>update the timer in the main loop</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206314"></a><a name="_Toc297808428"></a><span lang=RO>30.
ForceFeedback Joystick</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206315"></a><a name="_Toc297808429"></a><span lang=RO>initforce</span></h2>

<p class=MsoNormal>syntax:</p>

<p class=MsoNormal><b>initforce()</b></p>

<p class=MsoNormal>description:</p>

<p class=MsoNormal>init the direct input device (you must have Directx9.0c
installed on Your computer)</p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206316"></a><a name="_Toc297808430"></a><span lang=RO>setjoy</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>setjoy(id_joy)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>id_joy as UInteger (0 if you have only one
joystick)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the active joystick</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206317"></a><a name="_Toc297808431"></a><span lang=RO>runeff</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><span lang=RO>runeff(file_eff)</span></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file_eff as string (the file name with effect)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>run an effect directly from a file</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206318"></a><a name="_Toc297808432"></a><span lang=RO>loadeff</span></h2>

<p class=MsoNormal>syntax:</p>

<p class=MsoNormal><b><span lang=RO>loadeff(file_eff)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>file_eff as string (the file name with effect)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>load an effect in memory, ready to be used</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206319"></a><a name="_Toc297808433"></a><span lang=RO>runloadedeff</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>runloadedeff()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>run the before loaded effect</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206320"></a><a name="_Toc297808434"></a><span lang=RO>stopforce</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>stopforce()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>stop an effect</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206321"></a><a name="_Toc297808435"></a><span lang=RO>releaseforce</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>releaseforce()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>close and release the device, freeing the
memory</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206322"></a><a name="_Toc297808436"></a><span lang=RO>31.
GUI</span></h1>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206323"></a><a name="_Toc297808437"></a><span lang=RO>31.1.
Button</span></h1>

<h2><a name="_Toc297206324"></a><a name="_Toc297808438"></a><span lang=RO>nCreateGUIButton</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateGUIButton(x,y,w,h,text,parent)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y – the coordinates of the screen in pixels
as Integer; w,h – width, height of the button as Integer; text – the string
text , as zString Ptr; parent – the parent of the burron, as UInteger Ptr; </span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a GUI button, returns a pointer as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206325"></a><a name="_Toc297808439"></a><span lang=RO>nCreateGUIButtonToolTip</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateGUIButtonToolTip(x,y,w,h,text,tooltiptext,parent)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>x,y – the coordinates of the screen in pixels as
Integer; w,h – width, height of the button as Integer; text – the string text,
as zString Ptr;tooltiptext – the tooltip string text,as zString Ptr; parent –
the parent of the button, as UInteger Ptr; </span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a GUI button with tooltip text, returns
a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206326"></a><a name="_Toc297808440"></a><span lang=RO>nSetIsPushButton</span></h2>

<p class=MsoNormal>syntax:</p>

<p class=MsoNormal><b>nSetIsPushButton(button, ispush)</b></p>

<p class=MsoNormal>where:</p>

<p class=MsoNormal>button – as UInteger Ptr; ispush – 0 or 1;</p>

<p class=MsoNormal>description:</p>

<p class=MsoNormal>sets if the button is push button;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206327"></a><a name="_Toc297808441"></a><span lang=RO>nSetPressed</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetPressed(button,press)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>button as UInteger Ptr; press – 0 or 1;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>set the button pressed;<b> </b></span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206328"></a><a name="_Toc297808442"></a><span lang=RO>nSetButtonImageNormal</span></h2>

<p class=MsoNormal>syntax:</p>

<p class=MsoNormal><b><span lang=RO>nSetButtonImageNormal(button, texture,
x,y,w,h)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>button as UInteger Ptr, texture as UInteger
Ptr, x,y,w,h as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>set the texture as&nbsp; image
for button in normal position;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206329"></a><a name="_Toc297808443"></a><span lang=RO>nSetButtonImagePressed</span><span
lang=RO> </span></h2>

<p class=MsoNormal>syntax:</p>

<p class=MsoNormal><b><span lang=RO>nSetButtonImagePressed(button, texture,
x,y,w,h)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>button as UInteger Ptr, texture as UInteger
Ptr, x,y,w,h as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>set the texture as&nbsp; image
for button in pressed position;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206330"></a><a name="_Toc297808444"></a><span lang=RO>nSetScaleImage</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetScaleImage(button,
scaleflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>button as UInteger
Ptr; scaleflag as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set if button
image is scaled (0 – no, 1 – yes)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206331"></a><a name="_Toc297808445"></a><span lang=RO>nGetButtonIsPressed</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetButtonIsPressed(button)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>button as UInteger
Ptr; function returns a value as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns 1 if the
button is pressed;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206332"></a><a name="_Toc297808446"></a><span lang=RO>nButtonDrawBorder</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nButtonDrawBorder(button,
borderflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>button as UInteger
Ptr; borderflag as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>sets if the button
has border (0 - no, 1 – yes);</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206333"></a><a name="_Toc297808447"></a><span lang=RO>nDeleteButton</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nDeleteButton(button)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>button as UInteger
Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>delete the button;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206334"></a><a name="_Toc297808448"></a><span lang=RO>31.2.
ScrollBar</span></h1>

<h2><a name="_Toc297206335"></a><a name="_Toc297808449"></a><span lang=RO>nCreateGUIScrollBar</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nCreateGUIScrollBar(x,y,w,h,HorVertFlag,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h – as
Integer, HorVertFlag as Integer; parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a scrollbar
( horizontal if HorVertFlag =0, vertical if&nbsp; HorVertFlag =1)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns a pointer
as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206336"></a><a name="_Toc297808450"></a><span lang=RO>nSetScrollBarPosition</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetScrollBarPosition(scrollbar,
position)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr; position as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>set the position of the
scrollbar;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206337"></a><a name="_Toc297808451"></a><span lang=RO>nSetScrollBarSmallStep</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetScrollBarSmallStep(scrollbar,
step)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr; step as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the scrollbar
as smallstep scrollbar and the step;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206338"></a><a name="_Toc297808452"></a><span lang=RO>nSetScrollBarLargeStep</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetScrollBarLargeStep(scrollbar,
step)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr; step as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the scrollbar
as largestep scrollbar and the step;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206339"></a><a name="_Toc297808453"></a><span lang=RO>nSetMaxScrollBar</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetMaxScrollBar(scrollbar,
maxsbvalue)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr; maxsbvalue as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>set the max value of the
scrollbar;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206340"></a><a name="_Toc297808454"></a><span lang=RO>nSetMinScrollBar</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetMinScrollBar(scrollbar,
minsbvalue)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr; minsbvalue as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>set the min value of the
scrollbar;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206341"></a><a name="_Toc297808455"></a><span lang=RO>nGetScrollBarXY</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetScrollBarXY(scrollbar)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>returns the curent position of the
scrollbar, as Integer;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206342"></a><a name="_Toc297808456"></a><span lang=RO>nDeleteScrollBar</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nDeleteScrollBar(scrollbar)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>scrollbar as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>delete the scrollbar;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206343"></a><a name="_Toc297808457"></a><span lang=RO>31.3.
Window</span></h1>

<h2><a name="_Toc297206344"></a><a name="_Toc297808458"></a><span lang=RO>nCreateGUIWindow</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nCreateGUIWindow(x,y,w,h,text,modal,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; text as zString Ptr; modal as Integer; parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a window
for GUI at x,y of the screen, with w width and h height, with text as caption,
modal (0 – no, 1 – yes), having parent (0 – no parent)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns a pointer
as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206345"></a><a name="_Toc297808459"></a><span lang=RO>nDeleteWindow</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nDeleteWindow(window)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>window as UInteger
Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>delete the window;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206346"></a><a name="_Toc297808460"></a><span lang=RO>31.4.
FileOpenDialog</span></h1>

<h2><a name="_Toc297206347"></a><a name="_Toc297808461"></a><span lang=RO>nCreateFileOpenDialog</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nCreateFileOpenDialog(text,
modal, parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>text as zString Ptr;
modal as Integer; parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a
fileopendialg, returns a pointer as UInteger Ptr; (modal = 0 or 1)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206348"></a><a name="_Toc297808462"></a><span lang=RO>nGetFileNameFromDialog</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetFileNameFromDialog(fileopendialog)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>fileopendialog as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>returns the file name as zString
Ptr;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206349"></a><a name="_Toc297808463"></a><span lang=RO>nGetDirectoryNameFromDialog</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetDirectoryNameFromDialog(fileopendialog)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>fileopendialog as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns the
directory name as wString Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206350"></a><a name="_Toc297808464"></a><span lang=RO>31.5.
MessageBox</span></h1>

<h2><a name="_Toc297206351"></a><a name="_Toc297808465"></a><span lang=RO>nCreateGUIMessageBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nCreateGUIMessageBox(caption,
flags, text, parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>caption as zString
Ptr; flags as Integer; text as zString Ptr; parent as UInteger Ptr)</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a message
box; returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206352"></a><a name="_Toc297808466"></a><span lang=RO>31.6.
CheckBox</span></h1>

<h2><a name="_Toc297206353"></a><a name="_Toc297808467"></a><span lang=RO>nCreateGUICheckBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nCreateGUICheckBox(x,y,w,h,text,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; text as zString Ptr; parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a check
box, returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206354"></a><a name="_Toc297808468"></a><span lang=RO>nSetCheckBoxEnable</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetCheckBoxEnable(checkbox,
enableflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>checkbox as
UInteger Ptr; enableflag as Integer (0 or 1);</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>enables or
disables a check box;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206355"></a><a name="_Toc297808469"></a><span lang=RO>nSetCheckBoxChecked</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetCheckBoxChecked(checkbox,
checkedflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>checkbox as UInteger
Ptr; checkedflag as Integer (0 or 1);</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>check or uncheck a
check box ;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206356"></a><a name="_Toc297808470"></a><span lang=RO>nGetCheckBoxIsChecked</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetCheckBoxIsChecked(checkbox)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>checkbox as
UInteger Ptr; returns a value as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns 1 if the
checkbox is checked, else returns 0;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206357"></a><a name="_Toc297808471"></a><span lang=RO>31.7.
EditBox</span></h1>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206358"></a><a name="_Toc297808472"></a><span lang=RO>nCreateEditBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nCreateEditBox(x,y,w,h,text,borderflag,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; text as zString Ptr; borderflag as Integer (0 or 1); parent as
UInteger Ptr; </span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create an edit box,
returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206359"></a><a name="_Toc297808473"></a><span lang=RO>nSetTextEditBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetTextEditBox(edittext,text)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>edittext as
UInteger Ptr; text as zString Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the text in
the edit box;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206360"></a><a name="_Toc297808474"></a><span lang=RO>nGetTextEditBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetTextEditBox(edittext)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>edittext as
UInteger Ptr; </span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns teh text
in the edittext, as wString Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206361"></a><a name="_Toc297808475"></a><span lang=RO>nSetEditBoxTextAlignment</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetEditBoxTextAlignment(edittext,horflag,vertflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>edittext as
UInteger Ptr; horflag, vertflag as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the alignment
of the text in the edit text: </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>horflag = 0 left,
horflag = 1 center, horflag = 2 right, </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>vertflag = 0 up,
vertflag = 1 center, vertflag = 2 down</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206362"></a><a name="_Toc297808476"></a><span lang=RO>31.8.
StaticText</span></h1>

<h2><a name="_Toc297206363"></a><a name="_Toc297808477"></a><span lang=RO>nAddStaticText</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddStaticText(text,x,y,w,h,borderflag,
wrapflag,backgrd,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; borderflag as Integer (0 or 1); wrapflag as Integer (0 or 1); backgrd
as Integer (0 or 1); parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a static text
on the screen; returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206364"></a><a name="_Toc297808478"></a><span lang=RO>nSetStaticTextAlignment</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetStaticTextAlignment(statictext,horflag,vertflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>statuctext as
UInteger Ptr; horflag, vertflag as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the alignment:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>horflag = 0 left,
horflag = 1 center, horflag = 2 right, </span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>vertflag = 0 up,
vertflag = 1 center, vertflag = 2 down</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206365"></a><a name="_Toc297808479"></a><span lang=RO>31.9.
Menu</span></h1>

<h2><a name="_Toc297206366"></a><a name="_Toc297808480"></a><span lang=RO>nAddMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddMenu(parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>parent as UInteger
Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'>create a menu conteiner, returns
a pointer as UInteger Ptr;</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206367"></a><a name="_Toc297808481"></a><span lang=RO>nAddItemToMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddItemToMenu(menu,text,commandId,hassubmenu)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>menu as UInteger
Ptr; text as wString Ptr; commandId as Integer; hassubmenu as Integer (0 or 1)</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add an item to
menu; returns an index as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206368"></a><a name="_Toc297808482"></a><span lang=RO>nAddSeparatorToMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddSeparatorToMenu(menu)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>menu as UInteger
Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a separator to
menu</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206369"></a><a name="_Toc297808483"></a><span lang=RO>nGetSelectedItem</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetSelectedItem(menu)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>menu as UInteger
Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns the index
of the selected item;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206370"></a><a name="_Toc297808484"></a><span lang=RO>nGetItemCommandId</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetItemCommandId(menu,idxItem)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>menu as UInteger
Ptr; idxItem as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns the
commandId&nbsp; for the item having index idxItem, as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206371"></a><a name="_Toc297808485"></a><span lang=RO>nGetSubMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetSubMenu(menu,idxItem)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>menu as UInteger
Ptr; idxItem as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns a
pointer&nbsp; as UInteger Ptr to the submenu , having idxItem index;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206372"></a><a name="_Toc297808486"></a><span lang=RO>nAddContextMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddContextMenu(parent,x,y,w,h)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>parent as UInteger
Ptr; x,y,w,h as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a context menu,
returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206373"></a><a name="_Toc297808487"></a><span lang=RO>nSetVisibleContextMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetVisibleContextMenu(contextmenu,visibleflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>contextmenu as
UInteger Ptr; visibleflag as Integer( 0 or 1);</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the visibility
of the context menu ;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206374"></a><a name="_Toc297808488"></a><span lang=RO>nSetCloseHandlingContextMenu</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetCloseHandlingContextMenu(contextmenu,closebehavior)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>contextmenu as
UInteger Ptr; closebehavior as Integer ( 0, 1 or 2)</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the behavior
of the context menu when closes;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206375"></a><a name="_Toc297808489"></a><span lang=RO>31.10.
ToolBar</span></h1>

<h2><a name="_Toc297206376"></a><a name="_Toc297808490"></a><span lang=RO>nAddToolBar</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddToolBar(parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>parent as UInteger
Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a tool bar,
returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206377"></a><a name="_Toc297808491"></a><span lang=RO>nAddButtonToToolBar</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddButtonToToolBar(toolbar,
text, tooltiptext, normalimage, pressedimage,isPushflag, useAlphaflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>toolbar as
UInteger Ptr; text as wString Ptr; tooltiptext as wString Ptr; image as
nTexture; pressedimage as nTexture; isPush as Integer (0 or 1); useAlpha as
Integer (0 or 1);</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a button to tool
bar, returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206378"></a><a name="_Toc297808492"></a><span lang=RO>31.11.
TabControl</span><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></h1>

<h2><a name="_Toc297206379"></a><a name="_Toc297808493"></a><span lang=RO>nAddTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddTabControl(x,y,w,h,parent,fillingbg,border)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; parent as UInteger Ptr; fillingbg as Integer (0 or 1); border as
Integer (0 or 1);</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a tab control,
returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h2><a name="_Toc297206380"></a><a name="_Toc297808494"></a><span lang=RO>nAddTabInTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddTabInTabControl(tabcontrol,
caption)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as
UInteger Ptr; caption as wString Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a tab to tab
control; returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206381"></a><a name="_Toc297808495"></a><span lang=RO>nGetNrTabsInTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetNrTabsInTabControl(tabcontrol)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns how many
tabs in tab control are, as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206382"></a><a name="_Toc297808496"></a><span lang=RO>nGetActiveTabInTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetActiveTabInTabControl(tabcontrol)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns the index
of the&nbsp; active tab in tab control, as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206383"></a><a name="_Toc297808497"></a><span lang=RO>nSetActiveTabByIndexInTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetActiveTabByIndexInTabControl(tabcontrol,
index)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as
UInteger Ptr; index as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set active tab by
index;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206384"></a><a name="_Toc297808498"></a><span lang=RO>nSetActiveTabByNameInTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetActiveTabByNameInTabControl(tabcontrol,
tabname)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as
UInteger Ptr; tabname as UInteger Ptr)</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set active tab by
name ( its pointer)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206385"></a><a name="_Toc297808499"></a><span lang=RO>nGetPointToTabInTabControl</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetPointToTabInTabControl(tabcontrol,
index)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as UInteger
Ptr; index as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>returns the
pointer to the tab by its index; (as UInteger Ptr)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206386"></a><a name="_Toc297808500"></a><span lang=RO>nSetTabHeight</span><span
lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetTabHeight(tabcontrol,
height)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>tabcontrol as
UInteger Ptr; height as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the height of
the tabcontrol;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206387"></a><a name="_Toc297808501"></a><span lang=RO>31.12.
Image GUI</span></h1>

<h2><a name="_Toc297206388"></a><a name="_Toc297808502"></a><span lang=RO>nAddImageGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddImageGUI(x,y,w,h,text,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; text as wString Ptr;parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>create a blank image
to GUI, returns a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206389"></a><a name="_Toc297808503"></a><span lang=RO>nSetImageGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetImageGUI(imageGUI,
texture)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>imageGui as
UInteger Ptr; texture as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set a texture to
the imageGUI;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h2><a name="_Toc297206390"></a><a name="_Toc297808504"></a><span lang=RO>nSetColorImageGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetColorImageGUI(imageGUI,
r,g,b,a)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>imageGUI as
UInteger Ptr; r,g,b,a as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the color of
the imageGUI;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206391"></a><a name="_Toc297808505"></a><span lang=RO>nSetScaleImageGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetScaleImageGUI(imageGUI,
flagscale)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>imageGUI as
UInteger Ptr; flagscale as Integer (0 or 1)</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the flag of
the scaling image when is texturing;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206392"></a><a name="_Toc297808506"></a><span lang=RO>nSetUseAlphaChannelImageGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetUseAlphaChannelImageGUI(imageGUI,
flagalpha)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>imageGUI as
UInteger Ptr; flagalpha as Integer (0 or 1);</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the flag if
will be used the alpha channel of the texture;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206393"></a><a name="_Toc297808507"></a><span lang=RO>31.13.
ComboBox</span></h1>

<h2><a name="_Toc297206394"></a><a name="_Toc297808508"></a><span lang=RO>nAddComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddComboBox(x,y,w,h,parent)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>x,y,w,h as
Integer; parent as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add a combo box,
return a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206395"></a><a name="_Toc297808509"></a><span lang=RO>nAddItemComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nAddItemComboBox(comboBox,
text)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>comboBox as
UInteger Ptr; text as wString Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>add an item to
combo box, returns an index as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206396"></a><a name="_Toc297808510"></a><span lang=RO>nGetItemCountComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetItemCountComboBox(comboBox)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>combobox as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>return the total
items count of the combo box, as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></p>

<h2><a name="_Toc297206397"></a><a name="_Toc297808511"></a><span lang=RO>nGetStringItemComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetStringItemComboBox(comboBox,
indexitem)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>comboBox as UInteger
Ptr; indexItem as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>return the string
of the item , as wString Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206398"></a><a name="_Toc297808512"></a><span lang=RO>nGetSelectedItemComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nGetSelectedItemComboBox(comboBox)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>comboBox as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>return the index
of the selected item, as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206399"></a><a name="_Toc297808513"></a><span lang=RO>nSetSelectedItemComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetSelectedItemComboBox(comboBox,
indexitem)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>comboBox as
UInteger Ptr; indexItem as Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set an item as
selected by its index;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206400"></a><a name="_Toc297808514"></a><span lang=RO>nRemoveComboBox</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nRemoveComboBox(comboBox)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>comboBox as
UInteger Ptr;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>remove a combo
box;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206401"></a><a name="_Toc297808515"></a><span lang=RO>31.14.
Global GUI</span></h1>

<h2><a name="_Toc297206402"></a><a name="_Toc297808516"></a><span lang=RO>nSetTransparencyGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetTransparencyGUI(alphavalue)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>alphavalue as
Integer;</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the
transparency of the GUI;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206403"></a><a name="_Toc297808517"></a><span lang=RO>nSetVisibleGUIElement</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nSetVisibleGUIElement(element,visibleflag)</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>where:</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>element as
UInteger Ptr; visibleflag as Integer (0 or 1)</span></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>set the visibility
of an element;</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206404"></a><a name="_Toc297808518"></a><span lang=RO>nDrawGUI</span></h2>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>syntax:</span></p>

<p class=MsoNormal style='text-autospace:none'><b><span lang=RO>nDrawGUI ( ) </span></b></p>

<p class=MsoNormal style='text-autospace:none'>description:</p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>if is calling in
the main loop, draws the GUI (it is not necesary this command, the engine has
this command inside of the render step in the main loop)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h1><a name="_Toc297206405"></a><a name="_Toc297808519"></a><span lang=RO>32.
Terrain Editor Commands</span></h1>

<p class=MsoNormal><span lang=RO>(used only with terrain editors)</span></p>

<h2><a name="_Toc297206406"></a><a name="_Toc297808520"></a><span lang=RO>nWriteImageToFile</span></h2>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nWriteImageToFile(image, extension)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage, extension as Integer (0 –
bmp, 1 – jpg)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>writes an image to a bmp or jpg file; is used
in terrain editors to save the colormap and the heightmap;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206407"></a><a name="_Toc297808521"></a><span lang=RO>nWriteImageSplatToFile</span></h2>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nWriteImageSplatToFile(image, nrsplat)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>image as nImage; nrsplat as Integer(1,2,3,4
for splat maps &nbsp;and 5 for lightmap);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>used in terrain splatting editor to save the
splat map and the lightmap;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206408"></a><a name="_Toc297808522"></a><span lang=RO>nPaintSplatOGL</span></h2>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPaintSplatOGL(curentsplat, othersplata,
othersplatb, othersplatc, stage, channelcolor, xpos, ypos, radius, alpha);</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>curentsplat, othersplata, othersplatb,
othersplatc as nTexture;</span></p>

<p class=MsoNormal><span lang=RO>stage as Integer (1,2,3,4);</span></p>

<p class=MsoNormal><span lang=RO>channelcolor as integer(1 – red, 2 – green, 3
– blue);</span></p>

<p class=MsoNormal><span lang=RO>xpos, ypos as Integer – the tool center to paint;</span></p>

<p class=MsoNormal><span lang=RO>radius as Integer – the tool radius;</span></p>

<p class=MsoNormal><span lang=RO>alpha as Integer (0 to 255);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>paint the terrain in real time&nbsp; using
texture splatting;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206409"></a><a name="_Toc297808523"></a><span lang=RO>nPaintLightMap</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nPaintLightMap(hm_terrain, lm_texture,
sundistance, sunheight)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>hm_terrain as UInteger Ptr; lm_texture as
nTexture; sundistance, sunheight as Integer;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>paint and save the lightmap;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206410"></a><a name="_Toc297808524"></a><span lang=RO>nInterpolateLightMap</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nInterpolateLightMap(lm_texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>lm_texture as nTexture;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>increase the quality of the lightmap;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206411"></a><a name="_Toc297808525"></a><span lang=RO>nClearLightMap</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nClearLightMap(lm_texture)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>lm_texture as nTexture;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>clear the lightmap;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206412"></a><a name="_Toc297808526"></a><span lang=RO>nCreateSplatManagerOGL</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateSplatManagerOGL()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a splat manager in openGL; it is using
GLSL shader;</span></p>

<p class=MsoNormal><span lang=RO>return a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206413"></a><a name="_Toc297808527"></a><span lang=RO>nBindSplatManagerOGLwithTerrain2</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nBindSplatManagerOGLwithTerrain2(splatmanagerOGL,
terrain, splat1, splat2, splat3, splat4, splat_lm, </span></b></p>

<p class=MsoNormal><b><span lang=RO>tile1_red, tile1_green, tile1_blue,
tile2_red, tile2_green, tile2_blue, tile3_red, tile3_green, tile3_blue, </span></b></p>

<p class=MsoNormal><b><span lang=RO>tile4_red, tile4_green, tile4_blue,
tile_lm, nrpass, lum, anim) </span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>splatmanagerOGL as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain;</span></p>

<p class=MsoNormal><span lang=RO>splat1, splat2, splat3, splat4, splat_lm as
nTexture;</span></p>

<p class=MsoNormal><span lang=RO>tile1_red, tile1_green, tile1_blue, tile2_red,
tile2_green, tile2_blue, tile3_red, tile3_green, tile3_blue, </span></p>

<p class=MsoNormal><span lang=RO>tile4_red, tile4_green, tile4_blue, tile_lm as
nTexture;</span></p>

<p class=MsoNormal><span lang=RO>nrpass as Integer, how many stages;</span></p>

<p class=MsoNormal><span lang=RO>lum as Integer, if is used lightmap (0 or 1);</span></p>

<p class=MsoNormal><span lang=RO>anim as Integer (0 or 1 for animated texture,
for now, use only 0)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>bind the splat manager in OpenGL with the
terrain;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206414"></a><a name="_Toc297808528"></a><span lang=RO>nDrawSplatOGL</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawSplatOGL(splatmanagerOGL)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>splatmanageOGL as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draw in the main loop making visible terrain
texture splatting;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206415"></a><a name="_Toc297808529"></a><span lang=RO>nCreateSplatManagerDX9</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateSplatManagerDX9()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a splat manager for DirectX 9.0c, with
HLSL shader;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206416"></a><a name="_Toc297808530"></a><span lang=RO>nBindSplatManagerDX9withTerrain2</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nBindSplatManagerDX9withTerrain2(splatmanagerDX9,
terrain, splat1, splat2, splat3, splat4, splat_lm, tile1_red, tile1_green,
tile1_blue, tile2_red, tile2_green, tile2_blue, tile3_red, tile3_green,
tile3_blue, </span></b></p>

<p class=MsoNormal><b><span lang=RO>tile4_red, tile4_green, tile4_blue,
tile_lm, nrpass, lum, anim) </span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>splatmanagerDX9 as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain;</span></p>

<p class=MsoNormal><span lang=RO>splat1, splat2, splat3, splat4, splat_lm as
nTexture;</span></p>

<p class=MsoNormal><span lang=RO>tile1_red, tile1_green, tile1_blue, tile2_red,
tile2_green, tile2_blue, tile3_red, tile3_green, tile3_blue, </span></p>

<p class=MsoNormal><span lang=RO>tile4_red, tile4_green, tile4_blue, tile_lm as
nTexture;</span></p>

<p class=MsoNormal><span lang=RO>nrpass as Integer, how many stages;</span></p>

<p class=MsoNormal><span lang=RO>lum as Integer, if is used lightmap (0 or 1);</span></p>

<p class=MsoNormal><span lang=RO>anim as Integer (0 or 1 for animated texture,
for now, use only 0)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>bind the splat manager in DirectX9.0c with the
terrain;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206417"></a><a name="_Toc297808531"></a><span lang=RO>nDrawSplatDX9</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nDrawSplatDX9(splatmanagerDX9)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>splatmanagerDX9 as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>draw in the main loop making visible terrain
texture splatting;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206418"></a><a name="_Toc297808532"></a><span lang=RO>nGetTerrainSelector</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTerrainSelector(terrain)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return a pointer as UInteger Ptr to the
triangle selector for terrain;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206419"></a><a name="_Toc297808533"></a><span lang=RO>nCreateArrow</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nCreateArrow()</span></b></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>create a visible arrow for the terrain editor,
return a pointer as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206420"></a><a name="_Toc297808534"></a><span lang=RO>nGetXPoSArrow</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetXPoSArrow(terrain, arrow, selector,
camera, scaleX, scaleZ, terrSize)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain;</span></p>

<p class=MsoNormal><span lang=RO>arrow as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>selector as UInteger Ptr; </span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera;</span></p>

<p class=MsoNormal><span lang=RO>scaleX, scaleZ as Integer (the scale factor of
the terrain);</span></p>

<p class=MsoNormal><span lang=RO>terrSize as Integer – the initial size of the
terrain;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the X position as Integer of the arrow;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206421"></a><a name="_Toc297808535"></a><span lang=RO>nGetZPoSArrow</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetZPoSArrow(terrain, arrow, selector,
camera, scaleX, scaleZ, terrSize)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as nTerrain;</span></p>

<p class=MsoNormal><span lang=RO>arrow as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>selector as UInteger Ptr; </span></p>

<p class=MsoNormal><span lang=RO>camera as nCamera;</span></p>

<p class=MsoNormal><span lang=RO>scaleX, scaleZ as Integer (the scale factor of
the terrain);</span></p>

<p class=MsoNormal><span lang=RO>terrSize as Integer – the initial size of the
terrain;</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return the Z position as Integer of the arrow;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206422"></a><a name="_Toc297808536"></a><span lang=RO>nGetTerrainVerticesEntry</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nGetTerrainVerticesEntry(terrain)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as UInteger Ptr (or nTerrain);</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>return a pointer as UInteger Ptr to the 1st
vertex in the vertex buffer of the terrain;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206423"></a><a name="_Toc297808537"></a><span lang=RO>nSetHeightTerrainVerticesGroup2</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSetHeightTerrainVerticesGroup2(terrain,
radius, xpos, zpos, speed, updown, scaleXZ, scaleY, terrSize,</span></b></p>

<p class=MsoNormal><b><span lang=RO>shape, verticesEntry)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>radius as Integer;</span></p>

<p class=MsoNormal><span lang=RO>xpos, zpos as Integer;</span></p>

<p class=MsoNormal><span lang=RO>speed as Single( &gt;0);</span></p>

<p class=MsoNormal><span lang=RO>updown as Integer (0 or 1)</span></p>

<p class=MsoNormal><span lang=RO>scaleXZ as Integer, factor scale on XZ
directions;</span></p>

<p class=MsoNormal><span lang=RO>scaleY as Integer, factor scale on Y
direction;</span></p>

<p class=MsoNormal><span lang=RO>terrSize as Integer, the initial size of
terrain;</span></p>

<p class=MsoNormal><span lang=RO>shape as Integer, (0 or 1, for circle or
square);</span></p>

<p class=MsoNormal><span lang=RO>verticesEntry as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<h2><a name="_Toc297206424"></a><a name="_Toc297808538"></a><span lang=RO>nSaveTerrainHM</span></h2>

<p class=MsoNormal><span lang=RO>syntax:</span></p>

<p class=MsoNormal><b><span lang=RO>nSaveTerrainHM(terrain, terrsize)</span></b></p>

<p class=MsoNormal><span lang=RO>where:</span></p>

<p class=MsoNormal><span lang=RO>terrain as UInteger Ptr;</span></p>

<p class=MsoNormal><span lang=RO>terrsize as Integer; (the initial size of
terrain)</span></p>

<p class=MsoNormal><span lang=RO>description:</span></p>

<p class=MsoNormal><span lang=RO>save in a heightmap folder the heightmap as
bmp file;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal><span lang=RO>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center;text-autospace:none'><b><span
lang=RO>Clady3D – May - 2011</span></b></p>

<p class=MsoNormal style='text-autospace:none'><span lang=RO>&nbsp;</span></p>

</div>

</body>

</html>
